/**
 * XLSXMapToSpreadsheetML.java
 *
 * This file was generated by MapForce 2014r2.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the MapForce Documentation for further details.
 * http://www.altova.com/mapforce
 */
package org.bimserver.cobie.shared.transform.xslx.spreadsheetml;
import com.altova.mapforce.*;
import com.altova.types.*;
import com.altova.xml.*;

import java.util.*;

@SuppressWarnings("unused")
public class XLSXMapToSpreadsheetML extends com.altova.TraceProvider 
{
	private boolean runDoesCloseAll = true;
	public void setCloseObjectsAfterRun(boolean c) {runDoesCloseAll = c;}
	public boolean getCloseObjectsAfterRun() {return runDoesCloseAll;}

	
	static class main implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_instance_XLSX;
	
		public main(com.altova.mapforce.IMFNode var1_instance_XLSX)
		{
			this.var1_instance_XLSX = var1_instance_XLSX;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 2;
			Object current;
			main closure;
			com.altova.mapforce.IMFNode var2_create_namespace;
			com.altova.mapforce.IMFNode var3_create_namespace;
			com.altova.mapforce.IMFNode var4_create_namespace;
			com.altova.mapforce.IMFNode var5_create_namespace;
			com.altova.mapforce.IMFNode var6_create_namespace;
			com.altova.mapforce.IMFNode var7_create_namespace;
			com.altova.mapforce.IMFNode var8_create_namespace;
			com.altova.mapforce.IMFNode var9_create_namespace;
			com.altova.mapforce.IMFNode var10_create_namespace;
			com.altova.mapforce.IMFNode var11_create_namespace;
			com.altova.mapforce.IMFNode var12_create_namespace;
			com.altova.mapforce.IMFNode var13_create_namespace;
			com.altova.mapforce.IMFNode var14_create_namespace;
			javax.xml.namespace.QName var15_create_qname;
			javax.xml.namespace.QName var16_create_qname;
			javax.xml.namespace.QName var17_create_qname;
			com.altova.mapforce.IEnumerable var18_filter_elements_qname;
			public Enumerator(main closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_2() throws Exception {
				state = 0;				
				var2_create_namespace = com.altova.functions.Core.createNamespace("udcs", "http://schemas.microsoft.com/data/udc/soap");
				var3_create_namespace = com.altova.functions.Core.createNamespace("udc", "http://schemas.microsoft.com/data/udc");
				var4_create_namespace = com.altova.functions.Core.createNamespace("z", "#RowsetSchema");
				var5_create_namespace = com.altova.functions.Core.createNamespace("udcxf", "http://schemas.microsoft.com/data/udc/xmlfile");
				var6_create_namespace = com.altova.functions.Core.createNamespace("c", "urn:schemas-microsoft-com:office:component:spreadsheet");
				var7_create_namespace = com.altova.functions.Core.createNamespace("x", "urn:schemas-microsoft-com:office:excel");
				var8_create_namespace = com.altova.functions.Core.createNamespace("v", "urn:schemas-microsoft-com:vml");
				var9_create_namespace = com.altova.functions.Core.createNamespace("s", "uuid:BDC6E3F0-6DA3-11d1-A2A3-00AA00C14882");
				var10_create_namespace = com.altova.functions.Core.createNamespace("x2", "http://schemas.microsoft.com/office/excel/2003/xml");
				var11_create_namespace = com.altova.functions.Core.createNamespace("o", "urn:schemas-microsoft-com:office:office");
				var12_create_namespace = com.altova.functions.Core.createNamespace("soap-env", "http://schemas.xmlsoap.org/soap/envelope/");
				var13_create_namespace = com.altova.functions.Core.createNamespace("rs", "urn:schemas-microsoft-com:rowset");
				var14_create_namespace = com.altova.functions.Core.createNamespace("dt", "uuid:C2F41010-65B3-11d1-A29F-00AA00C14882");
				var15_create_qname = com.altova.functions.Core.createQName("Table", "urn:schemas-microsoft-com:office:spreadsheet");
				var16_create_qname = com.altova.functions.Core.createQName("Worksheet", "urn:schemas-microsoft-com:office:spreadsheet");
				var17_create_qname = com.altova.functions.Core.createQName("Name", "urn:schemas-microsoft-com:office:spreadsheet");
				var18_filter_elements_qname = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Workbook", ""), closure.var1_instance_XLSX));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ss:Workbook", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq1_join(var4_create_namespace, var3_create_namespace, var2_create_namespace, var5_create_namespace, var10_create_namespace, var12_create_namespace, var6_create_namespace, var7_create_namespace, var11_create_namespace, var13_create_namespace, var8_create_namespace, var9_create_namespace, var14_create_namespace, var16_create_qname, var17_create_qname, var15_create_qname, var18_filter_elements_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq1_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_namespace;
		com.altova.mapforce.IMFNode var2_create_namespace;
		com.altova.mapforce.IMFNode var3_create_namespace;
		com.altova.mapforce.IMFNode var4_create_namespace;
		com.altova.mapforce.IMFNode var5_create_namespace;
		com.altova.mapforce.IMFNode var6_create_namespace;
		com.altova.mapforce.IMFNode var7_create_namespace;
		com.altova.mapforce.IMFNode var8_create_namespace;
		com.altova.mapforce.IMFNode var9_create_namespace;
		com.altova.mapforce.IMFNode var10_create_namespace;
		com.altova.mapforce.IMFNode var11_create_namespace;
		com.altova.mapforce.IMFNode var12_create_namespace;
		com.altova.mapforce.IMFNode var13_create_namespace;
		javax.xml.namespace.QName var14_create_qname;
		javax.xml.namespace.QName var15_create_qname;
		javax.xml.namespace.QName var16_create_qname;
		com.altova.mapforce.IEnumerable var17_filter_elements_qname;
	
		public seq1_join(com.altova.mapforce.IMFNode var1_create_namespace, com.altova.mapforce.IMFNode var2_create_namespace, com.altova.mapforce.IMFNode var3_create_namespace, com.altova.mapforce.IMFNode var4_create_namespace, com.altova.mapforce.IMFNode var5_create_namespace, com.altova.mapforce.IMFNode var6_create_namespace, com.altova.mapforce.IMFNode var7_create_namespace, com.altova.mapforce.IMFNode var8_create_namespace, com.altova.mapforce.IMFNode var9_create_namespace, com.altova.mapforce.IMFNode var10_create_namespace, com.altova.mapforce.IMFNode var11_create_namespace, com.altova.mapforce.IMFNode var12_create_namespace, com.altova.mapforce.IMFNode var13_create_namespace, javax.xml.namespace.QName var14_create_qname, javax.xml.namespace.QName var15_create_qname, javax.xml.namespace.QName var16_create_qname, com.altova.mapforce.IEnumerable var17_filter_elements_qname)
		{
			this.var1_create_namespace = var1_create_namespace;
			this.var2_create_namespace = var2_create_namespace;
			this.var3_create_namespace = var3_create_namespace;
			this.var4_create_namespace = var4_create_namespace;
			this.var5_create_namespace = var5_create_namespace;
			this.var6_create_namespace = var6_create_namespace;
			this.var7_create_namespace = var7_create_namespace;
			this.var8_create_namespace = var8_create_namespace;
			this.var9_create_namespace = var9_create_namespace;
			this.var10_create_namespace = var10_create_namespace;
			this.var11_create_namespace = var11_create_namespace;
			this.var12_create_namespace = var12_create_namespace;
			this.var13_create_namespace = var13_create_namespace;
			this.var14_create_qname = var14_create_qname;
			this.var15_create_qname = var15_create_qname;
			this.var16_create_qname = var16_create_qname;
			this.var17_filter_elements_qname = var17_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq1_join closure;
			com.altova.mapforce.IEnumerable var18_seq_;
			IEnumerator var19_result;
			public Enumerator(seq1_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var3_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var5_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = closure.var6_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = closure.var7_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = closure.var8_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = closure.var9_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = closure.var10_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = closure.var11_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = closure.var12_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				current = closure.var13_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				var18_seq_ = new com.altova.functions.Core.SequenceCache((new seq2_seq_(closure.var14_create_qname, closure.var1_create_namespace, closure.var2_create_namespace, closure.var3_create_namespace, closure.var4_create_namespace, closure.var5_create_namespace, closure.var6_create_namespace, closure.var7_create_namespace, closure.var8_create_namespace, closure.var9_create_namespace, closure.var10_create_namespace, closure.var11_create_namespace, closure.var12_create_namespace, closure.var13_create_namespace, closure.var15_create_qname, closure.var16_create_qname, closure.var17_filter_elements_qname)));
				var19_result = (var18_seq_).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var19_result.moveNext()) {state = 16; return false; }
				current = (com.altova.mapforce.IMFNode)com.altova.functions.Core.first((new seq166_create_element_qname(((com.altova.mapforce.IMFNode)(var19_result.current())), closure.var15_create_qname, closure.var16_create_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 0;				
				var19_result.close(); var19_result = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var19_result.close(); var19_result = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq2_seq_ implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_create_namespace;
		com.altova.mapforce.IMFNode var3_create_namespace;
		com.altova.mapforce.IMFNode var4_create_namespace;
		com.altova.mapforce.IMFNode var5_create_namespace;
		com.altova.mapforce.IMFNode var6_create_namespace;
		com.altova.mapforce.IMFNode var7_create_namespace;
		com.altova.mapforce.IMFNode var8_create_namespace;
		com.altova.mapforce.IMFNode var9_create_namespace;
		com.altova.mapforce.IMFNode var10_create_namespace;
		com.altova.mapforce.IMFNode var11_create_namespace;
		com.altova.mapforce.IMFNode var12_create_namespace;
		com.altova.mapforce.IMFNode var13_create_namespace;
		com.altova.mapforce.IMFNode var14_create_namespace;
		javax.xml.namespace.QName var15_create_qname;
		javax.xml.namespace.QName var16_create_qname;
		com.altova.mapforce.IEnumerable var17_filter_elements_qname;
	
		public seq2_seq_(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_create_namespace, com.altova.mapforce.IMFNode var3_create_namespace, com.altova.mapforce.IMFNode var4_create_namespace, com.altova.mapforce.IMFNode var5_create_namespace, com.altova.mapforce.IMFNode var6_create_namespace, com.altova.mapforce.IMFNode var7_create_namespace, com.altova.mapforce.IMFNode var8_create_namespace, com.altova.mapforce.IMFNode var9_create_namespace, com.altova.mapforce.IMFNode var10_create_namespace, com.altova.mapforce.IMFNode var11_create_namespace, com.altova.mapforce.IMFNode var12_create_namespace, com.altova.mapforce.IMFNode var13_create_namespace, com.altova.mapforce.IMFNode var14_create_namespace, javax.xml.namespace.QName var15_create_qname, javax.xml.namespace.QName var16_create_qname, com.altova.mapforce.IEnumerable var17_filter_elements_qname)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_create_namespace = var2_create_namespace;
			this.var3_create_namespace = var3_create_namespace;
			this.var4_create_namespace = var4_create_namespace;
			this.var5_create_namespace = var5_create_namespace;
			this.var6_create_namespace = var6_create_namespace;
			this.var7_create_namespace = var7_create_namespace;
			this.var8_create_namespace = var8_create_namespace;
			this.var9_create_namespace = var9_create_namespace;
			this.var10_create_namespace = var10_create_namespace;
			this.var11_create_namespace = var11_create_namespace;
			this.var12_create_namespace = var12_create_namespace;
			this.var13_create_namespace = var13_create_namespace;
			this.var14_create_namespace = var14_create_namespace;
			this.var15_create_qname = var15_create_qname;
			this.var16_create_qname = var16_create_qname;
			this.var17_filter_elements_qname = var17_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq2_seq_ closure;
			public Enumerator(seq2_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(closure.var1_create_qname, (new seq3_seq_(closure.var2_create_namespace, closure.var3_create_namespace, closure.var4_create_namespace, closure.var5_create_namespace, closure.var6_create_namespace, closure.var7_create_namespace, closure.var8_create_namespace, closure.var9_create_namespace, closure.var10_create_namespace, closure.var11_create_namespace, closure.var12_create_namespace, closure.var13_create_namespace, closure.var14_create_namespace, closure.var15_create_qname, closure.var16_create_qname, closure.var17_filter_elements_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(closure.var1_create_qname, (new seq13_seq_(closure.var2_create_namespace, closure.var3_create_namespace, closure.var4_create_namespace, closure.var5_create_namespace, closure.var6_create_namespace, closure.var7_create_namespace, closure.var8_create_namespace, closure.var9_create_namespace, closure.var10_create_namespace, closure.var11_create_namespace, closure.var12_create_namespace, closure.var13_create_namespace, closure.var14_create_namespace, closure.var15_create_qname, closure.var16_create_qname, closure.var17_filter_elements_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.functions.Core.createElement(closure.var1_create_qname, (new seq22_seq_(closure.var2_create_namespace, closure.var3_create_namespace, closure.var4_create_namespace, closure.var5_create_namespace, closure.var6_create_namespace, closure.var7_create_namespace, closure.var8_create_namespace, closure.var9_create_namespace, closure.var10_create_namespace, closure.var11_create_namespace, closure.var12_create_namespace, closure.var13_create_namespace, closure.var14_create_namespace, closure.var15_create_qname, closure.var16_create_qname, closure.var17_filter_elements_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = com.altova.functions.Core.createElement(closure.var1_create_qname, (new seq31_seq_(closure.var2_create_namespace, closure.var3_create_namespace, closure.var4_create_namespace, closure.var5_create_namespace, closure.var6_create_namespace, closure.var7_create_namespace, closure.var8_create_namespace, closure.var9_create_namespace, closure.var10_create_namespace, closure.var11_create_namespace, closure.var12_create_namespace, closure.var13_create_namespace, closure.var14_create_namespace, closure.var15_create_qname, closure.var16_create_qname, closure.var17_filter_elements_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = com.altova.functions.Core.createElement(closure.var1_create_qname, (new seq40_seq_(closure.var2_create_namespace, closure.var3_create_namespace, closure.var4_create_namespace, closure.var5_create_namespace, closure.var6_create_namespace, closure.var7_create_namespace, closure.var8_create_namespace, closure.var9_create_namespace, closure.var10_create_namespace, closure.var11_create_namespace, closure.var12_create_namespace, closure.var13_create_namespace, closure.var14_create_namespace, closure.var15_create_qname, closure.var16_create_qname, closure.var17_filter_elements_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = com.altova.functions.Core.createElement(closure.var1_create_qname, (new seq49_seq_(closure.var2_create_namespace, closure.var3_create_namespace, closure.var4_create_namespace, closure.var5_create_namespace, closure.var6_create_namespace, closure.var7_create_namespace, closure.var8_create_namespace, closure.var9_create_namespace, closure.var10_create_namespace, closure.var11_create_namespace, closure.var12_create_namespace, closure.var13_create_namespace, closure.var14_create_namespace, closure.var15_create_qname, closure.var16_create_qname, closure.var17_filter_elements_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = com.altova.functions.Core.createElement(closure.var1_create_qname, (new seq58_seq_(closure.var2_create_namespace, closure.var3_create_namespace, closure.var4_create_namespace, closure.var5_create_namespace, closure.var6_create_namespace, closure.var7_create_namespace, closure.var8_create_namespace, closure.var9_create_namespace, closure.var10_create_namespace, closure.var11_create_namespace, closure.var12_create_namespace, closure.var13_create_namespace, closure.var14_create_namespace, closure.var15_create_qname, closure.var16_create_qname, closure.var17_filter_elements_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createElement(closure.var1_create_qname, (new seq67_seq_(closure.var2_create_namespace, closure.var3_create_namespace, closure.var4_create_namespace, closure.var5_create_namespace, closure.var6_create_namespace, closure.var7_create_namespace, closure.var8_create_namespace, closure.var9_create_namespace, closure.var10_create_namespace, closure.var11_create_namespace, closure.var12_create_namespace, closure.var13_create_namespace, closure.var14_create_namespace, closure.var15_create_qname, closure.var16_create_qname, closure.var17_filter_elements_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = com.altova.functions.Core.createElement(closure.var1_create_qname, (new seq76_seq_(closure.var2_create_namespace, closure.var3_create_namespace, closure.var4_create_namespace, closure.var5_create_namespace, closure.var6_create_namespace, closure.var7_create_namespace, closure.var8_create_namespace, closure.var9_create_namespace, closure.var10_create_namespace, closure.var11_create_namespace, closure.var12_create_namespace, closure.var13_create_namespace, closure.var14_create_namespace, closure.var15_create_qname, closure.var16_create_qname, closure.var17_filter_elements_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = com.altova.functions.Core.createElement(closure.var1_create_qname, (new seq85_seq_(closure.var2_create_namespace, closure.var3_create_namespace, closure.var4_create_namespace, closure.var5_create_namespace, closure.var6_create_namespace, closure.var7_create_namespace, closure.var8_create_namespace, closure.var9_create_namespace, closure.var10_create_namespace, closure.var11_create_namespace, closure.var12_create_namespace, closure.var13_create_namespace, closure.var14_create_namespace, closure.var15_create_qname, closure.var16_create_qname, closure.var17_filter_elements_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = com.altova.functions.Core.createElement(closure.var1_create_qname, (new seq94_seq_(closure.var2_create_namespace, closure.var3_create_namespace, closure.var4_create_namespace, closure.var5_create_namespace, closure.var6_create_namespace, closure.var7_create_namespace, closure.var8_create_namespace, closure.var9_create_namespace, closure.var10_create_namespace, closure.var11_create_namespace, closure.var12_create_namespace, closure.var13_create_namespace, closure.var14_create_namespace, closure.var15_create_qname, closure.var16_create_qname, closure.var17_filter_elements_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = com.altova.functions.Core.createElement(closure.var1_create_qname, (new seq103_seq_(closure.var2_create_namespace, closure.var3_create_namespace, closure.var4_create_namespace, closure.var5_create_namespace, closure.var6_create_namespace, closure.var7_create_namespace, closure.var8_create_namespace, closure.var9_create_namespace, closure.var10_create_namespace, closure.var11_create_namespace, closure.var12_create_namespace, closure.var13_create_namespace, closure.var14_create_namespace, closure.var15_create_qname, closure.var16_create_qname, closure.var17_filter_elements_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				current = com.altova.functions.Core.createElement(closure.var1_create_qname, (new seq112_seq_(closure.var2_create_namespace, closure.var3_create_namespace, closure.var4_create_namespace, closure.var5_create_namespace, closure.var6_create_namespace, closure.var7_create_namespace, closure.var8_create_namespace, closure.var9_create_namespace, closure.var10_create_namespace, closure.var11_create_namespace, closure.var12_create_namespace, closure.var13_create_namespace, closure.var14_create_namespace, closure.var15_create_qname, closure.var16_create_qname, closure.var17_filter_elements_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = com.altova.functions.Core.createElement(closure.var1_create_qname, (new seq121_seq_(closure.var2_create_namespace, closure.var3_create_namespace, closure.var4_create_namespace, closure.var5_create_namespace, closure.var6_create_namespace, closure.var7_create_namespace, closure.var8_create_namespace, closure.var9_create_namespace, closure.var10_create_namespace, closure.var11_create_namespace, closure.var12_create_namespace, closure.var13_create_namespace, closure.var14_create_namespace, closure.var15_create_qname, closure.var16_create_qname, closure.var17_filter_elements_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 16;				
				current = com.altova.functions.Core.createElement(closure.var1_create_qname, (new seq130_seq_(closure.var2_create_namespace, closure.var3_create_namespace, closure.var4_create_namespace, closure.var5_create_namespace, closure.var6_create_namespace, closure.var7_create_namespace, closure.var8_create_namespace, closure.var9_create_namespace, closure.var10_create_namespace, closure.var11_create_namespace, closure.var12_create_namespace, closure.var13_create_namespace, closure.var14_create_namespace, closure.var15_create_qname, closure.var16_create_qname, closure.var17_filter_elements_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 17;				
				current = com.altova.functions.Core.createElement(closure.var1_create_qname, (new seq139_seq_(closure.var2_create_namespace, closure.var3_create_namespace, closure.var4_create_namespace, closure.var5_create_namespace, closure.var6_create_namespace, closure.var7_create_namespace, closure.var8_create_namespace, closure.var9_create_namespace, closure.var10_create_namespace, closure.var11_create_namespace, closure.var12_create_namespace, closure.var13_create_namespace, closure.var14_create_namespace, closure.var15_create_qname, closure.var16_create_qname, closure.var17_filter_elements_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 18;				
				current = com.altova.functions.Core.createElement(closure.var1_create_qname, (new seq148_seq_(closure.var2_create_namespace, closure.var3_create_namespace, closure.var4_create_namespace, closure.var5_create_namespace, closure.var6_create_namespace, closure.var7_create_namespace, closure.var8_create_namespace, closure.var9_create_namespace, closure.var10_create_namespace, closure.var11_create_namespace, closure.var12_create_namespace, closure.var13_create_namespace, closure.var14_create_namespace, closure.var15_create_qname, closure.var16_create_qname, closure.var17_filter_elements_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(closure.var1_create_qname, (new seq157_seq_(closure.var2_create_namespace, closure.var3_create_namespace, closure.var4_create_namespace, closure.var5_create_namespace, closure.var6_create_namespace, closure.var7_create_namespace, closure.var8_create_namespace, closure.var9_create_namespace, closure.var10_create_namespace, closure.var11_create_namespace, closure.var12_create_namespace, closure.var13_create_namespace, closure.var14_create_namespace, closure.var15_create_qname, closure.var16_create_qname, closure.var17_filter_elements_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq3_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_namespace;
		com.altova.mapforce.IMFNode var2_create_namespace;
		com.altova.mapforce.IMFNode var3_create_namespace;
		com.altova.mapforce.IMFNode var4_create_namespace;
		com.altova.mapforce.IMFNode var5_create_namespace;
		com.altova.mapforce.IMFNode var6_create_namespace;
		com.altova.mapforce.IMFNode var7_create_namespace;
		com.altova.mapforce.IMFNode var8_create_namespace;
		com.altova.mapforce.IMFNode var9_create_namespace;
		com.altova.mapforce.IMFNode var10_create_namespace;
		com.altova.mapforce.IMFNode var11_create_namespace;
		com.altova.mapforce.IMFNode var12_create_namespace;
		com.altova.mapforce.IMFNode var13_create_namespace;
		javax.xml.namespace.QName var14_create_qname;
		javax.xml.namespace.QName var15_create_qname;
		com.altova.mapforce.IEnumerable var16_filter_elements_qname;
	
		public seq3_seq_(com.altova.mapforce.IMFNode var1_create_namespace, com.altova.mapforce.IMFNode var2_create_namespace, com.altova.mapforce.IMFNode var3_create_namespace, com.altova.mapforce.IMFNode var4_create_namespace, com.altova.mapforce.IMFNode var5_create_namespace, com.altova.mapforce.IMFNode var6_create_namespace, com.altova.mapforce.IMFNode var7_create_namespace, com.altova.mapforce.IMFNode var8_create_namespace, com.altova.mapforce.IMFNode var9_create_namespace, com.altova.mapforce.IMFNode var10_create_namespace, com.altova.mapforce.IMFNode var11_create_namespace, com.altova.mapforce.IMFNode var12_create_namespace, com.altova.mapforce.IMFNode var13_create_namespace, javax.xml.namespace.QName var14_create_qname, javax.xml.namespace.QName var15_create_qname, com.altova.mapforce.IEnumerable var16_filter_elements_qname)
		{
			this.var1_create_namespace = var1_create_namespace;
			this.var2_create_namespace = var2_create_namespace;
			this.var3_create_namespace = var3_create_namespace;
			this.var4_create_namespace = var4_create_namespace;
			this.var5_create_namespace = var5_create_namespace;
			this.var6_create_namespace = var6_create_namespace;
			this.var7_create_namespace = var7_create_namespace;
			this.var8_create_namespace = var8_create_namespace;
			this.var9_create_namespace = var9_create_namespace;
			this.var10_create_namespace = var10_create_namespace;
			this.var11_create_namespace = var11_create_namespace;
			this.var12_create_namespace = var12_create_namespace;
			this.var13_create_namespace = var13_create_namespace;
			this.var14_create_qname = var14_create_qname;
			this.var15_create_qname = var15_create_qname;
			this.var16_filter_elements_qname = var16_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq3_seq_ closure;
			public Enumerator(seq3_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var3_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var5_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = closure.var6_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = closure.var7_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = closure.var8_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = closure.var9_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = closure.var10_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = closure.var11_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = closure.var12_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				current = closure.var13_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = com.altova.functions.Core.createAttribute(closure.var14_create_qname, com.altova.functions.Core.box("Contact"));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(closure.var15_create_qname, (new seq4_join(closure.var16_filter_elements_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq4_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements_qname;
	
		public seq4_join(com.altova.mapforce.IEnumerable var1_filter_elements_qname)
		{
			this.var1_filter_elements_qname = var1_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq4_join closure;
			IEnumerator var2_filter_elements_qname;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq4_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (closure.var1_filter_elements_qname).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq5_filter(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				var4_filter = ((new seq8_filter(((com.altova.mapforce.IMFNode)(var3_filter.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				var3_filter.close(); var3_filter = null;
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Row", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				var4_filter.close(); var4_filter = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var4_filter.close(); var4_filter = null;
				var3_filter.close(); var3_filter = null;
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq5_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq5_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq5_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq5_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq6_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname;
	
		public seq6_map(com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname)
		{
			this.var1_cur_filter_attributes_qname = var1_cur_filter_attributes_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq6_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq6_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_filter_attributes_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current()))), "Contact");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq7_CoreAny implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_sequence;
	
		public seq7_CoreAny(com.altova.mapforce.IEnumerable var1_sequence)
		{
			this.var1_sequence = var1_sequence;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq7_CoreAny closure;
			IEnumerator var2_enum;
			public Enumerator(seq7_CoreAny closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_enum = (closure.var1_sequence).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_enum.moveNext()) {state = 3; return false; }
				if (!(((Boolean)(var2_enum.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.CoreTypes.parseBoolean("false");
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				var2_enum.close(); var2_enum = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_enum.close(); var2_enum = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq8_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq8_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq8_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq8_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq9_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq9_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq9_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq9_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(1L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq10_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq10_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq10_map closure;
			IEnumerator var2_filter_elements_qname;
			java.lang.String var3_cast;
			public Enumerator(seq10_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Cell", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq11_seq_(var3_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq11_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq11_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq11_seq_ closure;
			public Enumerator(seq11_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_cast;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Data", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq12_seq_(closure.var1_cast)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq12_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq12_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq12_seq_ closure;
			public Enumerator(seq12_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Type", "urn:schemas-microsoft-com:office:spreadsheet"), com.altova.functions.Core.box("String"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_cast;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq13_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_namespace;
		com.altova.mapforce.IMFNode var2_create_namespace;
		com.altova.mapforce.IMFNode var3_create_namespace;
		com.altova.mapforce.IMFNode var4_create_namespace;
		com.altova.mapforce.IMFNode var5_create_namespace;
		com.altova.mapforce.IMFNode var6_create_namespace;
		com.altova.mapforce.IMFNode var7_create_namespace;
		com.altova.mapforce.IMFNode var8_create_namespace;
		com.altova.mapforce.IMFNode var9_create_namespace;
		com.altova.mapforce.IMFNode var10_create_namespace;
		com.altova.mapforce.IMFNode var11_create_namespace;
		com.altova.mapforce.IMFNode var12_create_namespace;
		com.altova.mapforce.IMFNode var13_create_namespace;
		javax.xml.namespace.QName var14_create_qname;
		javax.xml.namespace.QName var15_create_qname;
		com.altova.mapforce.IEnumerable var16_filter_elements_qname;
	
		public seq13_seq_(com.altova.mapforce.IMFNode var1_create_namespace, com.altova.mapforce.IMFNode var2_create_namespace, com.altova.mapforce.IMFNode var3_create_namespace, com.altova.mapforce.IMFNode var4_create_namespace, com.altova.mapforce.IMFNode var5_create_namespace, com.altova.mapforce.IMFNode var6_create_namespace, com.altova.mapforce.IMFNode var7_create_namespace, com.altova.mapforce.IMFNode var8_create_namespace, com.altova.mapforce.IMFNode var9_create_namespace, com.altova.mapforce.IMFNode var10_create_namespace, com.altova.mapforce.IMFNode var11_create_namespace, com.altova.mapforce.IMFNode var12_create_namespace, com.altova.mapforce.IMFNode var13_create_namespace, javax.xml.namespace.QName var14_create_qname, javax.xml.namespace.QName var15_create_qname, com.altova.mapforce.IEnumerable var16_filter_elements_qname)
		{
			this.var1_create_namespace = var1_create_namespace;
			this.var2_create_namespace = var2_create_namespace;
			this.var3_create_namespace = var3_create_namespace;
			this.var4_create_namespace = var4_create_namespace;
			this.var5_create_namespace = var5_create_namespace;
			this.var6_create_namespace = var6_create_namespace;
			this.var7_create_namespace = var7_create_namespace;
			this.var8_create_namespace = var8_create_namespace;
			this.var9_create_namespace = var9_create_namespace;
			this.var10_create_namespace = var10_create_namespace;
			this.var11_create_namespace = var11_create_namespace;
			this.var12_create_namespace = var12_create_namespace;
			this.var13_create_namespace = var13_create_namespace;
			this.var14_create_qname = var14_create_qname;
			this.var15_create_qname = var15_create_qname;
			this.var16_filter_elements_qname = var16_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq13_seq_ closure;
			public Enumerator(seq13_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var3_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var5_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = closure.var6_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = closure.var7_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = closure.var8_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = closure.var9_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = closure.var10_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = closure.var11_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = closure.var12_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				current = closure.var13_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = com.altova.functions.Core.createAttribute(closure.var14_create_qname, com.altova.functions.Core.box("Facility"));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(closure.var15_create_qname, (new seq14_join(closure.var16_filter_elements_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq14_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements_qname;
	
		public seq14_join(com.altova.mapforce.IEnumerable var1_filter_elements_qname)
		{
			this.var1_filter_elements_qname = var1_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq14_join closure;
			IEnumerator var2_filter_elements_qname;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq14_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (closure.var1_filter_elements_qname).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq15_filter(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				var4_filter = ((new seq17_filter(((com.altova.mapforce.IMFNode)(var3_filter.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				var3_filter.close(); var3_filter = null;
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Row", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq19_map(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				var4_filter.close(); var4_filter = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var4_filter.close(); var4_filter = null;
				var3_filter.close(); var3_filter = null;
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq15_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq15_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq15_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq15_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq16_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname;
	
		public seq16_map(com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname)
		{
			this.var1_cur_filter_attributes_qname = var1_cur_filter_attributes_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq16_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq16_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_filter_attributes_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current()))), "Facility");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq17_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq17_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq17_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq17_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq18_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq18_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq18_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq18_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(1L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq19_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq19_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq19_map closure;
			IEnumerator var2_filter_elements_qname;
			java.lang.String var3_cast;
			public Enumerator(seq19_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Cell", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq20_seq_(var3_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq20_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq20_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq20_seq_ closure;
			public Enumerator(seq20_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_cast;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Data", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq21_seq_(closure.var1_cast)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq21_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq21_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq21_seq_ closure;
			public Enumerator(seq21_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Type", "urn:schemas-microsoft-com:office:spreadsheet"), com.altova.functions.Core.box("String"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_cast;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq22_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_namespace;
		com.altova.mapforce.IMFNode var2_create_namespace;
		com.altova.mapforce.IMFNode var3_create_namespace;
		com.altova.mapforce.IMFNode var4_create_namespace;
		com.altova.mapforce.IMFNode var5_create_namespace;
		com.altova.mapforce.IMFNode var6_create_namespace;
		com.altova.mapforce.IMFNode var7_create_namespace;
		com.altova.mapforce.IMFNode var8_create_namespace;
		com.altova.mapforce.IMFNode var9_create_namespace;
		com.altova.mapforce.IMFNode var10_create_namespace;
		com.altova.mapforce.IMFNode var11_create_namespace;
		com.altova.mapforce.IMFNode var12_create_namespace;
		com.altova.mapforce.IMFNode var13_create_namespace;
		javax.xml.namespace.QName var14_create_qname;
		javax.xml.namespace.QName var15_create_qname;
		com.altova.mapforce.IEnumerable var16_filter_elements_qname;
	
		public seq22_seq_(com.altova.mapforce.IMFNode var1_create_namespace, com.altova.mapforce.IMFNode var2_create_namespace, com.altova.mapforce.IMFNode var3_create_namespace, com.altova.mapforce.IMFNode var4_create_namespace, com.altova.mapforce.IMFNode var5_create_namespace, com.altova.mapforce.IMFNode var6_create_namespace, com.altova.mapforce.IMFNode var7_create_namespace, com.altova.mapforce.IMFNode var8_create_namespace, com.altova.mapforce.IMFNode var9_create_namespace, com.altova.mapforce.IMFNode var10_create_namespace, com.altova.mapforce.IMFNode var11_create_namespace, com.altova.mapforce.IMFNode var12_create_namespace, com.altova.mapforce.IMFNode var13_create_namespace, javax.xml.namespace.QName var14_create_qname, javax.xml.namespace.QName var15_create_qname, com.altova.mapforce.IEnumerable var16_filter_elements_qname)
		{
			this.var1_create_namespace = var1_create_namespace;
			this.var2_create_namespace = var2_create_namespace;
			this.var3_create_namespace = var3_create_namespace;
			this.var4_create_namespace = var4_create_namespace;
			this.var5_create_namespace = var5_create_namespace;
			this.var6_create_namespace = var6_create_namespace;
			this.var7_create_namespace = var7_create_namespace;
			this.var8_create_namespace = var8_create_namespace;
			this.var9_create_namespace = var9_create_namespace;
			this.var10_create_namespace = var10_create_namespace;
			this.var11_create_namespace = var11_create_namespace;
			this.var12_create_namespace = var12_create_namespace;
			this.var13_create_namespace = var13_create_namespace;
			this.var14_create_qname = var14_create_qname;
			this.var15_create_qname = var15_create_qname;
			this.var16_filter_elements_qname = var16_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq22_seq_ closure;
			public Enumerator(seq22_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var3_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var5_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = closure.var6_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = closure.var7_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = closure.var8_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = closure.var9_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = closure.var10_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = closure.var11_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = closure.var12_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				current = closure.var13_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = com.altova.functions.Core.createAttribute(closure.var14_create_qname, com.altova.functions.Core.box("Floor"));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(closure.var15_create_qname, (new seq23_join(closure.var16_filter_elements_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq23_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements_qname;
	
		public seq23_join(com.altova.mapforce.IEnumerable var1_filter_elements_qname)
		{
			this.var1_filter_elements_qname = var1_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq23_join closure;
			IEnumerator var2_filter_elements_qname;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq23_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (closure.var1_filter_elements_qname).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq24_filter(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				var4_filter = ((new seq26_filter(((com.altova.mapforce.IMFNode)(var3_filter.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				var3_filter.close(); var3_filter = null;
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Row", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq28_map(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				var4_filter.close(); var4_filter = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var4_filter.close(); var4_filter = null;
				var3_filter.close(); var3_filter = null;
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq24_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq24_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq24_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq24_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq25_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq25_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname;
	
		public seq25_map(com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname)
		{
			this.var1_cur_filter_attributes_qname = var1_cur_filter_attributes_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq25_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq25_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_filter_attributes_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current()))), "Floor");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq26_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq26_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq26_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq26_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq27_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq27_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq27_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq27_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq27_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(1L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq28_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq28_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq28_map closure;
			IEnumerator var2_filter_elements_qname;
			java.lang.String var3_cast;
			public Enumerator(seq28_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Cell", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq29_seq_(var3_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq29_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq29_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq29_seq_ closure;
			public Enumerator(seq29_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_cast;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Data", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq30_seq_(closure.var1_cast)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq30_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq30_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq30_seq_ closure;
			public Enumerator(seq30_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Type", "urn:schemas-microsoft-com:office:spreadsheet"), com.altova.functions.Core.box("String"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_cast;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq31_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_namespace;
		com.altova.mapforce.IMFNode var2_create_namespace;
		com.altova.mapforce.IMFNode var3_create_namespace;
		com.altova.mapforce.IMFNode var4_create_namespace;
		com.altova.mapforce.IMFNode var5_create_namespace;
		com.altova.mapforce.IMFNode var6_create_namespace;
		com.altova.mapforce.IMFNode var7_create_namespace;
		com.altova.mapforce.IMFNode var8_create_namespace;
		com.altova.mapforce.IMFNode var9_create_namespace;
		com.altova.mapforce.IMFNode var10_create_namespace;
		com.altova.mapforce.IMFNode var11_create_namespace;
		com.altova.mapforce.IMFNode var12_create_namespace;
		com.altova.mapforce.IMFNode var13_create_namespace;
		javax.xml.namespace.QName var14_create_qname;
		javax.xml.namespace.QName var15_create_qname;
		com.altova.mapforce.IEnumerable var16_filter_elements_qname;
	
		public seq31_seq_(com.altova.mapforce.IMFNode var1_create_namespace, com.altova.mapforce.IMFNode var2_create_namespace, com.altova.mapforce.IMFNode var3_create_namespace, com.altova.mapforce.IMFNode var4_create_namespace, com.altova.mapforce.IMFNode var5_create_namespace, com.altova.mapforce.IMFNode var6_create_namespace, com.altova.mapforce.IMFNode var7_create_namespace, com.altova.mapforce.IMFNode var8_create_namespace, com.altova.mapforce.IMFNode var9_create_namespace, com.altova.mapforce.IMFNode var10_create_namespace, com.altova.mapforce.IMFNode var11_create_namespace, com.altova.mapforce.IMFNode var12_create_namespace, com.altova.mapforce.IMFNode var13_create_namespace, javax.xml.namespace.QName var14_create_qname, javax.xml.namespace.QName var15_create_qname, com.altova.mapforce.IEnumerable var16_filter_elements_qname)
		{
			this.var1_create_namespace = var1_create_namespace;
			this.var2_create_namespace = var2_create_namespace;
			this.var3_create_namespace = var3_create_namespace;
			this.var4_create_namespace = var4_create_namespace;
			this.var5_create_namespace = var5_create_namespace;
			this.var6_create_namespace = var6_create_namespace;
			this.var7_create_namespace = var7_create_namespace;
			this.var8_create_namespace = var8_create_namespace;
			this.var9_create_namespace = var9_create_namespace;
			this.var10_create_namespace = var10_create_namespace;
			this.var11_create_namespace = var11_create_namespace;
			this.var12_create_namespace = var12_create_namespace;
			this.var13_create_namespace = var13_create_namespace;
			this.var14_create_qname = var14_create_qname;
			this.var15_create_qname = var15_create_qname;
			this.var16_filter_elements_qname = var16_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq31_seq_ closure;
			public Enumerator(seq31_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var3_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var5_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = closure.var6_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = closure.var7_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = closure.var8_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = closure.var9_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = closure.var10_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = closure.var11_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = closure.var12_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				current = closure.var13_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = com.altova.functions.Core.createAttribute(closure.var14_create_qname, com.altova.functions.Core.box("Space"));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(closure.var15_create_qname, (new seq32_join(closure.var16_filter_elements_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq32_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements_qname;
	
		public seq32_join(com.altova.mapforce.IEnumerable var1_filter_elements_qname)
		{
			this.var1_filter_elements_qname = var1_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq32_join closure;
			IEnumerator var2_filter_elements_qname;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq32_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (closure.var1_filter_elements_qname).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq33_filter(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				var4_filter = ((new seq35_filter(((com.altova.mapforce.IMFNode)(var3_filter.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				var3_filter.close(); var3_filter = null;
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Row", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq37_map(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				var4_filter.close(); var4_filter = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var4_filter.close(); var4_filter = null;
				var3_filter.close(); var3_filter = null;
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq33_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq33_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq33_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq33_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq34_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq34_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname;
	
		public seq34_map(com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname)
		{
			this.var1_cur_filter_attributes_qname = var1_cur_filter_attributes_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq34_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq34_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_filter_attributes_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current()))), "Space");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq35_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq35_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq35_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq35_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq36_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq36_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq36_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq36_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq36_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(1L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq37_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq37_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq37_map closure;
			IEnumerator var2_filter_elements_qname;
			java.lang.String var3_cast;
			public Enumerator(seq37_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Cell", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq38_seq_(var3_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq38_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq38_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq38_seq_ closure;
			public Enumerator(seq38_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_cast;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Data", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq39_seq_(closure.var1_cast)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq39_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq39_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq39_seq_ closure;
			public Enumerator(seq39_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Type", "urn:schemas-microsoft-com:office:spreadsheet"), com.altova.functions.Core.box("String"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_cast;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq40_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_namespace;
		com.altova.mapforce.IMFNode var2_create_namespace;
		com.altova.mapforce.IMFNode var3_create_namespace;
		com.altova.mapforce.IMFNode var4_create_namespace;
		com.altova.mapforce.IMFNode var5_create_namespace;
		com.altova.mapforce.IMFNode var6_create_namespace;
		com.altova.mapforce.IMFNode var7_create_namespace;
		com.altova.mapforce.IMFNode var8_create_namespace;
		com.altova.mapforce.IMFNode var9_create_namespace;
		com.altova.mapforce.IMFNode var10_create_namespace;
		com.altova.mapforce.IMFNode var11_create_namespace;
		com.altova.mapforce.IMFNode var12_create_namespace;
		com.altova.mapforce.IMFNode var13_create_namespace;
		javax.xml.namespace.QName var14_create_qname;
		javax.xml.namespace.QName var15_create_qname;
		com.altova.mapforce.IEnumerable var16_filter_elements_qname;
	
		public seq40_seq_(com.altova.mapforce.IMFNode var1_create_namespace, com.altova.mapforce.IMFNode var2_create_namespace, com.altova.mapforce.IMFNode var3_create_namespace, com.altova.mapforce.IMFNode var4_create_namespace, com.altova.mapforce.IMFNode var5_create_namespace, com.altova.mapforce.IMFNode var6_create_namespace, com.altova.mapforce.IMFNode var7_create_namespace, com.altova.mapforce.IMFNode var8_create_namespace, com.altova.mapforce.IMFNode var9_create_namespace, com.altova.mapforce.IMFNode var10_create_namespace, com.altova.mapforce.IMFNode var11_create_namespace, com.altova.mapforce.IMFNode var12_create_namespace, com.altova.mapforce.IMFNode var13_create_namespace, javax.xml.namespace.QName var14_create_qname, javax.xml.namespace.QName var15_create_qname, com.altova.mapforce.IEnumerable var16_filter_elements_qname)
		{
			this.var1_create_namespace = var1_create_namespace;
			this.var2_create_namespace = var2_create_namespace;
			this.var3_create_namespace = var3_create_namespace;
			this.var4_create_namespace = var4_create_namespace;
			this.var5_create_namespace = var5_create_namespace;
			this.var6_create_namespace = var6_create_namespace;
			this.var7_create_namespace = var7_create_namespace;
			this.var8_create_namespace = var8_create_namespace;
			this.var9_create_namespace = var9_create_namespace;
			this.var10_create_namespace = var10_create_namespace;
			this.var11_create_namespace = var11_create_namespace;
			this.var12_create_namespace = var12_create_namespace;
			this.var13_create_namespace = var13_create_namespace;
			this.var14_create_qname = var14_create_qname;
			this.var15_create_qname = var15_create_qname;
			this.var16_filter_elements_qname = var16_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq40_seq_ closure;
			public Enumerator(seq40_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var3_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var5_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = closure.var6_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = closure.var7_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = closure.var8_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = closure.var9_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = closure.var10_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = closure.var11_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = closure.var12_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				current = closure.var13_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = com.altova.functions.Core.createAttribute(closure.var14_create_qname, com.altova.functions.Core.box("Zone"));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(closure.var15_create_qname, (new seq41_join(closure.var16_filter_elements_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq41_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements_qname;
	
		public seq41_join(com.altova.mapforce.IEnumerable var1_filter_elements_qname)
		{
			this.var1_filter_elements_qname = var1_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq41_join closure;
			IEnumerator var2_filter_elements_qname;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq41_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (closure.var1_filter_elements_qname).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq42_filter(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				var4_filter = ((new seq44_filter(((com.altova.mapforce.IMFNode)(var3_filter.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				var3_filter.close(); var3_filter = null;
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Row", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq46_map(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				var4_filter.close(); var4_filter = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var4_filter.close(); var4_filter = null;
				var3_filter.close(); var3_filter = null;
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq42_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq42_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq42_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq42_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq43_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq43_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname;
	
		public seq43_map(com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname)
		{
			this.var1_cur_filter_attributes_qname = var1_cur_filter_attributes_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq43_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq43_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_filter_attributes_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current()))), "Zone");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq44_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq44_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq44_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq44_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq45_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq45_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq45_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq45_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq45_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(1L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq46_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq46_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq46_map closure;
			IEnumerator var2_filter_elements_qname;
			java.lang.String var3_cast;
			public Enumerator(seq46_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Cell", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq47_seq_(var3_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq47_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq47_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq47_seq_ closure;
			public Enumerator(seq47_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_cast;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Data", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq48_seq_(closure.var1_cast)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq48_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq48_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq48_seq_ closure;
			public Enumerator(seq48_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Type", "urn:schemas-microsoft-com:office:spreadsheet"), com.altova.functions.Core.box("String"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_cast;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq49_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_namespace;
		com.altova.mapforce.IMFNode var2_create_namespace;
		com.altova.mapforce.IMFNode var3_create_namespace;
		com.altova.mapforce.IMFNode var4_create_namespace;
		com.altova.mapforce.IMFNode var5_create_namespace;
		com.altova.mapforce.IMFNode var6_create_namespace;
		com.altova.mapforce.IMFNode var7_create_namespace;
		com.altova.mapforce.IMFNode var8_create_namespace;
		com.altova.mapforce.IMFNode var9_create_namespace;
		com.altova.mapforce.IMFNode var10_create_namespace;
		com.altova.mapforce.IMFNode var11_create_namespace;
		com.altova.mapforce.IMFNode var12_create_namespace;
		com.altova.mapforce.IMFNode var13_create_namespace;
		javax.xml.namespace.QName var14_create_qname;
		javax.xml.namespace.QName var15_create_qname;
		com.altova.mapforce.IEnumerable var16_filter_elements_qname;
	
		public seq49_seq_(com.altova.mapforce.IMFNode var1_create_namespace, com.altova.mapforce.IMFNode var2_create_namespace, com.altova.mapforce.IMFNode var3_create_namespace, com.altova.mapforce.IMFNode var4_create_namespace, com.altova.mapforce.IMFNode var5_create_namespace, com.altova.mapforce.IMFNode var6_create_namespace, com.altova.mapforce.IMFNode var7_create_namespace, com.altova.mapforce.IMFNode var8_create_namespace, com.altova.mapforce.IMFNode var9_create_namespace, com.altova.mapforce.IMFNode var10_create_namespace, com.altova.mapforce.IMFNode var11_create_namespace, com.altova.mapforce.IMFNode var12_create_namespace, com.altova.mapforce.IMFNode var13_create_namespace, javax.xml.namespace.QName var14_create_qname, javax.xml.namespace.QName var15_create_qname, com.altova.mapforce.IEnumerable var16_filter_elements_qname)
		{
			this.var1_create_namespace = var1_create_namespace;
			this.var2_create_namespace = var2_create_namespace;
			this.var3_create_namespace = var3_create_namespace;
			this.var4_create_namespace = var4_create_namespace;
			this.var5_create_namespace = var5_create_namespace;
			this.var6_create_namespace = var6_create_namespace;
			this.var7_create_namespace = var7_create_namespace;
			this.var8_create_namespace = var8_create_namespace;
			this.var9_create_namespace = var9_create_namespace;
			this.var10_create_namespace = var10_create_namespace;
			this.var11_create_namespace = var11_create_namespace;
			this.var12_create_namespace = var12_create_namespace;
			this.var13_create_namespace = var13_create_namespace;
			this.var14_create_qname = var14_create_qname;
			this.var15_create_qname = var15_create_qname;
			this.var16_filter_elements_qname = var16_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq49_seq_ closure;
			public Enumerator(seq49_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var3_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var5_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = closure.var6_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = closure.var7_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = closure.var8_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = closure.var9_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = closure.var10_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = closure.var11_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = closure.var12_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				current = closure.var13_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = com.altova.functions.Core.createAttribute(closure.var14_create_qname, com.altova.functions.Core.box("Type"));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(closure.var15_create_qname, (new seq50_join(closure.var16_filter_elements_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq50_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements_qname;
	
		public seq50_join(com.altova.mapforce.IEnumerable var1_filter_elements_qname)
		{
			this.var1_filter_elements_qname = var1_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq50_join closure;
			IEnumerator var2_filter_elements_qname;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq50_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (closure.var1_filter_elements_qname).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq51_filter(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				var4_filter = ((new seq53_filter(((com.altova.mapforce.IMFNode)(var3_filter.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				var3_filter.close(); var3_filter = null;
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Row", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq55_map(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				var4_filter.close(); var4_filter = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var4_filter.close(); var4_filter = null;
				var3_filter.close(); var3_filter = null;
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq51_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq51_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq51_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq51_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq52_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq52_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname;
	
		public seq52_map(com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname)
		{
			this.var1_cur_filter_attributes_qname = var1_cur_filter_attributes_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq52_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq52_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_filter_attributes_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current()))), "Type");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq53_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq53_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq53_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq53_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq54_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq54_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq54_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq54_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq54_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(1L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq55_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq55_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq55_map closure;
			IEnumerator var2_filter_elements_qname;
			java.lang.String var3_cast;
			public Enumerator(seq55_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Cell", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq56_seq_(var3_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq56_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq56_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq56_seq_ closure;
			public Enumerator(seq56_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_cast;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Data", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq57_seq_(closure.var1_cast)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq57_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq57_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq57_seq_ closure;
			public Enumerator(seq57_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Type", "urn:schemas-microsoft-com:office:spreadsheet"), com.altova.functions.Core.box("String"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_cast;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq58_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_namespace;
		com.altova.mapforce.IMFNode var2_create_namespace;
		com.altova.mapforce.IMFNode var3_create_namespace;
		com.altova.mapforce.IMFNode var4_create_namespace;
		com.altova.mapforce.IMFNode var5_create_namespace;
		com.altova.mapforce.IMFNode var6_create_namespace;
		com.altova.mapforce.IMFNode var7_create_namespace;
		com.altova.mapforce.IMFNode var8_create_namespace;
		com.altova.mapforce.IMFNode var9_create_namespace;
		com.altova.mapforce.IMFNode var10_create_namespace;
		com.altova.mapforce.IMFNode var11_create_namespace;
		com.altova.mapforce.IMFNode var12_create_namespace;
		com.altova.mapforce.IMFNode var13_create_namespace;
		javax.xml.namespace.QName var14_create_qname;
		javax.xml.namespace.QName var15_create_qname;
		com.altova.mapforce.IEnumerable var16_filter_elements_qname;
	
		public seq58_seq_(com.altova.mapforce.IMFNode var1_create_namespace, com.altova.mapforce.IMFNode var2_create_namespace, com.altova.mapforce.IMFNode var3_create_namespace, com.altova.mapforce.IMFNode var4_create_namespace, com.altova.mapforce.IMFNode var5_create_namespace, com.altova.mapforce.IMFNode var6_create_namespace, com.altova.mapforce.IMFNode var7_create_namespace, com.altova.mapforce.IMFNode var8_create_namespace, com.altova.mapforce.IMFNode var9_create_namespace, com.altova.mapforce.IMFNode var10_create_namespace, com.altova.mapforce.IMFNode var11_create_namespace, com.altova.mapforce.IMFNode var12_create_namespace, com.altova.mapforce.IMFNode var13_create_namespace, javax.xml.namespace.QName var14_create_qname, javax.xml.namespace.QName var15_create_qname, com.altova.mapforce.IEnumerable var16_filter_elements_qname)
		{
			this.var1_create_namespace = var1_create_namespace;
			this.var2_create_namespace = var2_create_namespace;
			this.var3_create_namespace = var3_create_namespace;
			this.var4_create_namespace = var4_create_namespace;
			this.var5_create_namespace = var5_create_namespace;
			this.var6_create_namespace = var6_create_namespace;
			this.var7_create_namespace = var7_create_namespace;
			this.var8_create_namespace = var8_create_namespace;
			this.var9_create_namespace = var9_create_namespace;
			this.var10_create_namespace = var10_create_namespace;
			this.var11_create_namespace = var11_create_namespace;
			this.var12_create_namespace = var12_create_namespace;
			this.var13_create_namespace = var13_create_namespace;
			this.var14_create_qname = var14_create_qname;
			this.var15_create_qname = var15_create_qname;
			this.var16_filter_elements_qname = var16_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq58_seq_ closure;
			public Enumerator(seq58_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var3_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var5_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = closure.var6_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = closure.var7_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = closure.var8_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = closure.var9_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = closure.var10_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = closure.var11_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = closure.var12_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				current = closure.var13_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = com.altova.functions.Core.createAttribute(closure.var14_create_qname, com.altova.functions.Core.box("Component"));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(closure.var15_create_qname, (new seq59_join(closure.var16_filter_elements_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq59_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements_qname;
	
		public seq59_join(com.altova.mapforce.IEnumerable var1_filter_elements_qname)
		{
			this.var1_filter_elements_qname = var1_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq59_join closure;
			IEnumerator var2_filter_elements_qname;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq59_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (closure.var1_filter_elements_qname).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq60_filter(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				var4_filter = ((new seq62_filter(((com.altova.mapforce.IMFNode)(var3_filter.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				var3_filter.close(); var3_filter = null;
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Row", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq64_map(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				var4_filter.close(); var4_filter = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var4_filter.close(); var4_filter = null;
				var3_filter.close(); var3_filter = null;
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq60_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq60_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq60_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq60_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq61_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq61_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname;
	
		public seq61_map(com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname)
		{
			this.var1_cur_filter_attributes_qname = var1_cur_filter_attributes_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq61_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq61_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_filter_attributes_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current()))), "Component");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq62_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq62_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq62_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq62_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq63_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq63_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq63_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq63_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(1L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq64_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq64_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq64_map closure;
			IEnumerator var2_filter_elements_qname;
			java.lang.String var3_cast;
			public Enumerator(seq64_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Cell", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq65_seq_(var3_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq65_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq65_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq65_seq_ closure;
			public Enumerator(seq65_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_cast;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Data", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq66_seq_(closure.var1_cast)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq66_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq66_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq66_seq_ closure;
			public Enumerator(seq66_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Type", "urn:schemas-microsoft-com:office:spreadsheet"), com.altova.functions.Core.box("String"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_cast;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq67_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_namespace;
		com.altova.mapforce.IMFNode var2_create_namespace;
		com.altova.mapforce.IMFNode var3_create_namespace;
		com.altova.mapforce.IMFNode var4_create_namespace;
		com.altova.mapforce.IMFNode var5_create_namespace;
		com.altova.mapforce.IMFNode var6_create_namespace;
		com.altova.mapforce.IMFNode var7_create_namespace;
		com.altova.mapforce.IMFNode var8_create_namespace;
		com.altova.mapforce.IMFNode var9_create_namespace;
		com.altova.mapforce.IMFNode var10_create_namespace;
		com.altova.mapforce.IMFNode var11_create_namespace;
		com.altova.mapforce.IMFNode var12_create_namespace;
		com.altova.mapforce.IMFNode var13_create_namespace;
		javax.xml.namespace.QName var14_create_qname;
		javax.xml.namespace.QName var15_create_qname;
		com.altova.mapforce.IEnumerable var16_filter_elements_qname;
	
		public seq67_seq_(com.altova.mapforce.IMFNode var1_create_namespace, com.altova.mapforce.IMFNode var2_create_namespace, com.altova.mapforce.IMFNode var3_create_namespace, com.altova.mapforce.IMFNode var4_create_namespace, com.altova.mapforce.IMFNode var5_create_namespace, com.altova.mapforce.IMFNode var6_create_namespace, com.altova.mapforce.IMFNode var7_create_namespace, com.altova.mapforce.IMFNode var8_create_namespace, com.altova.mapforce.IMFNode var9_create_namespace, com.altova.mapforce.IMFNode var10_create_namespace, com.altova.mapforce.IMFNode var11_create_namespace, com.altova.mapforce.IMFNode var12_create_namespace, com.altova.mapforce.IMFNode var13_create_namespace, javax.xml.namespace.QName var14_create_qname, javax.xml.namespace.QName var15_create_qname, com.altova.mapforce.IEnumerable var16_filter_elements_qname)
		{
			this.var1_create_namespace = var1_create_namespace;
			this.var2_create_namespace = var2_create_namespace;
			this.var3_create_namespace = var3_create_namespace;
			this.var4_create_namespace = var4_create_namespace;
			this.var5_create_namespace = var5_create_namespace;
			this.var6_create_namespace = var6_create_namespace;
			this.var7_create_namespace = var7_create_namespace;
			this.var8_create_namespace = var8_create_namespace;
			this.var9_create_namespace = var9_create_namespace;
			this.var10_create_namespace = var10_create_namespace;
			this.var11_create_namespace = var11_create_namespace;
			this.var12_create_namespace = var12_create_namespace;
			this.var13_create_namespace = var13_create_namespace;
			this.var14_create_qname = var14_create_qname;
			this.var15_create_qname = var15_create_qname;
			this.var16_filter_elements_qname = var16_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq67_seq_ closure;
			public Enumerator(seq67_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var3_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var5_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = closure.var6_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = closure.var7_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = closure.var8_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = closure.var9_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = closure.var10_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = closure.var11_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = closure.var12_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				current = closure.var13_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = com.altova.functions.Core.createAttribute(closure.var14_create_qname, com.altova.functions.Core.box("System"));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(closure.var15_create_qname, (new seq68_join(closure.var16_filter_elements_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq68_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements_qname;
	
		public seq68_join(com.altova.mapforce.IEnumerable var1_filter_elements_qname)
		{
			this.var1_filter_elements_qname = var1_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq68_join closure;
			IEnumerator var2_filter_elements_qname;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq68_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (closure.var1_filter_elements_qname).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq69_filter(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				var4_filter = ((new seq71_filter(((com.altova.mapforce.IMFNode)(var3_filter.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				var3_filter.close(); var3_filter = null;
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Row", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq73_map(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				var4_filter.close(); var4_filter = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var4_filter.close(); var4_filter = null;
				var3_filter.close(); var3_filter = null;
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq69_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq69_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq69_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq69_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq70_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname;
	
		public seq70_map(com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname)
		{
			this.var1_cur_filter_attributes_qname = var1_cur_filter_attributes_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq70_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq70_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_filter_attributes_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current()))), "System");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq71_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq71_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq71_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq71_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq72_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq72_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq72_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq72_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq72_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(1L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq73_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq73_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq73_map closure;
			IEnumerator var2_filter_elements_qname;
			java.lang.String var3_cast;
			public Enumerator(seq73_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Cell", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq74_seq_(var3_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq74_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq74_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq74_seq_ closure;
			public Enumerator(seq74_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_cast;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Data", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq75_seq_(closure.var1_cast)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq75_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq75_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq75_seq_ closure;
			public Enumerator(seq75_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Type", "urn:schemas-microsoft-com:office:spreadsheet"), com.altova.functions.Core.box("String"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_cast;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq76_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_namespace;
		com.altova.mapforce.IMFNode var2_create_namespace;
		com.altova.mapforce.IMFNode var3_create_namespace;
		com.altova.mapforce.IMFNode var4_create_namespace;
		com.altova.mapforce.IMFNode var5_create_namespace;
		com.altova.mapforce.IMFNode var6_create_namespace;
		com.altova.mapforce.IMFNode var7_create_namespace;
		com.altova.mapforce.IMFNode var8_create_namespace;
		com.altova.mapforce.IMFNode var9_create_namespace;
		com.altova.mapforce.IMFNode var10_create_namespace;
		com.altova.mapforce.IMFNode var11_create_namespace;
		com.altova.mapforce.IMFNode var12_create_namespace;
		com.altova.mapforce.IMFNode var13_create_namespace;
		javax.xml.namespace.QName var14_create_qname;
		javax.xml.namespace.QName var15_create_qname;
		com.altova.mapforce.IEnumerable var16_filter_elements_qname;
	
		public seq76_seq_(com.altova.mapforce.IMFNode var1_create_namespace, com.altova.mapforce.IMFNode var2_create_namespace, com.altova.mapforce.IMFNode var3_create_namespace, com.altova.mapforce.IMFNode var4_create_namespace, com.altova.mapforce.IMFNode var5_create_namespace, com.altova.mapforce.IMFNode var6_create_namespace, com.altova.mapforce.IMFNode var7_create_namespace, com.altova.mapforce.IMFNode var8_create_namespace, com.altova.mapforce.IMFNode var9_create_namespace, com.altova.mapforce.IMFNode var10_create_namespace, com.altova.mapforce.IMFNode var11_create_namespace, com.altova.mapforce.IMFNode var12_create_namespace, com.altova.mapforce.IMFNode var13_create_namespace, javax.xml.namespace.QName var14_create_qname, javax.xml.namespace.QName var15_create_qname, com.altova.mapforce.IEnumerable var16_filter_elements_qname)
		{
			this.var1_create_namespace = var1_create_namespace;
			this.var2_create_namespace = var2_create_namespace;
			this.var3_create_namespace = var3_create_namespace;
			this.var4_create_namespace = var4_create_namespace;
			this.var5_create_namespace = var5_create_namespace;
			this.var6_create_namespace = var6_create_namespace;
			this.var7_create_namespace = var7_create_namespace;
			this.var8_create_namespace = var8_create_namespace;
			this.var9_create_namespace = var9_create_namespace;
			this.var10_create_namespace = var10_create_namespace;
			this.var11_create_namespace = var11_create_namespace;
			this.var12_create_namespace = var12_create_namespace;
			this.var13_create_namespace = var13_create_namespace;
			this.var14_create_qname = var14_create_qname;
			this.var15_create_qname = var15_create_qname;
			this.var16_filter_elements_qname = var16_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq76_seq_ closure;
			public Enumerator(seq76_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var3_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var5_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = closure.var6_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = closure.var7_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = closure.var8_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = closure.var9_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = closure.var10_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = closure.var11_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = closure.var12_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				current = closure.var13_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = com.altova.functions.Core.createAttribute(closure.var14_create_qname, com.altova.functions.Core.box("Assembly"));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(closure.var15_create_qname, (new seq77_join(closure.var16_filter_elements_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq77_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements_qname;
	
		public seq77_join(com.altova.mapforce.IEnumerable var1_filter_elements_qname)
		{
			this.var1_filter_elements_qname = var1_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq77_join closure;
			IEnumerator var2_filter_elements_qname;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq77_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (closure.var1_filter_elements_qname).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq78_filter(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				var4_filter = ((new seq80_filter(((com.altova.mapforce.IMFNode)(var3_filter.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				var3_filter.close(); var3_filter = null;
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Row", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq82_map(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				var4_filter.close(); var4_filter = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var4_filter.close(); var4_filter = null;
				var3_filter.close(); var3_filter = null;
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq78_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq78_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq78_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq78_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq79_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq79_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname;
	
		public seq79_map(com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname)
		{
			this.var1_cur_filter_attributes_qname = var1_cur_filter_attributes_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq79_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq79_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_filter_attributes_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current()))), "Assembly");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq80_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq80_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq80_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq80_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq81_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq81_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq81_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq81_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq81_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(1L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq82_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq82_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq82_map closure;
			IEnumerator var2_filter_elements_qname;
			java.lang.String var3_cast;
			public Enumerator(seq82_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Cell", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq83_seq_(var3_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq83_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq83_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq83_seq_ closure;
			public Enumerator(seq83_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_cast;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Data", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq84_seq_(closure.var1_cast)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq84_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq84_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq84_seq_ closure;
			public Enumerator(seq84_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Type", "urn:schemas-microsoft-com:office:spreadsheet"), com.altova.functions.Core.box("String"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_cast;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq85_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_namespace;
		com.altova.mapforce.IMFNode var2_create_namespace;
		com.altova.mapforce.IMFNode var3_create_namespace;
		com.altova.mapforce.IMFNode var4_create_namespace;
		com.altova.mapforce.IMFNode var5_create_namespace;
		com.altova.mapforce.IMFNode var6_create_namespace;
		com.altova.mapforce.IMFNode var7_create_namespace;
		com.altova.mapforce.IMFNode var8_create_namespace;
		com.altova.mapforce.IMFNode var9_create_namespace;
		com.altova.mapforce.IMFNode var10_create_namespace;
		com.altova.mapforce.IMFNode var11_create_namespace;
		com.altova.mapforce.IMFNode var12_create_namespace;
		com.altova.mapforce.IMFNode var13_create_namespace;
		javax.xml.namespace.QName var14_create_qname;
		javax.xml.namespace.QName var15_create_qname;
		com.altova.mapforce.IEnumerable var16_filter_elements_qname;
	
		public seq85_seq_(com.altova.mapforce.IMFNode var1_create_namespace, com.altova.mapforce.IMFNode var2_create_namespace, com.altova.mapforce.IMFNode var3_create_namespace, com.altova.mapforce.IMFNode var4_create_namespace, com.altova.mapforce.IMFNode var5_create_namespace, com.altova.mapforce.IMFNode var6_create_namespace, com.altova.mapforce.IMFNode var7_create_namespace, com.altova.mapforce.IMFNode var8_create_namespace, com.altova.mapforce.IMFNode var9_create_namespace, com.altova.mapforce.IMFNode var10_create_namespace, com.altova.mapforce.IMFNode var11_create_namespace, com.altova.mapforce.IMFNode var12_create_namespace, com.altova.mapforce.IMFNode var13_create_namespace, javax.xml.namespace.QName var14_create_qname, javax.xml.namespace.QName var15_create_qname, com.altova.mapforce.IEnumerable var16_filter_elements_qname)
		{
			this.var1_create_namespace = var1_create_namespace;
			this.var2_create_namespace = var2_create_namespace;
			this.var3_create_namespace = var3_create_namespace;
			this.var4_create_namespace = var4_create_namespace;
			this.var5_create_namespace = var5_create_namespace;
			this.var6_create_namespace = var6_create_namespace;
			this.var7_create_namespace = var7_create_namespace;
			this.var8_create_namespace = var8_create_namespace;
			this.var9_create_namespace = var9_create_namespace;
			this.var10_create_namespace = var10_create_namespace;
			this.var11_create_namespace = var11_create_namespace;
			this.var12_create_namespace = var12_create_namespace;
			this.var13_create_namespace = var13_create_namespace;
			this.var14_create_qname = var14_create_qname;
			this.var15_create_qname = var15_create_qname;
			this.var16_filter_elements_qname = var16_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq85_seq_ closure;
			public Enumerator(seq85_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var3_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var5_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = closure.var6_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = closure.var7_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = closure.var8_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = closure.var9_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = closure.var10_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = closure.var11_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = closure.var12_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				current = closure.var13_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = com.altova.functions.Core.createAttribute(closure.var14_create_qname, com.altova.functions.Core.box("Connection"));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(closure.var15_create_qname, (new seq86_join(closure.var16_filter_elements_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq86_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements_qname;
	
		public seq86_join(com.altova.mapforce.IEnumerable var1_filter_elements_qname)
		{
			this.var1_filter_elements_qname = var1_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq86_join closure;
			IEnumerator var2_filter_elements_qname;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq86_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (closure.var1_filter_elements_qname).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq87_filter(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				var4_filter = ((new seq89_filter(((com.altova.mapforce.IMFNode)(var3_filter.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				var3_filter.close(); var3_filter = null;
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Row", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq91_map(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				var4_filter.close(); var4_filter = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var4_filter.close(); var4_filter = null;
				var3_filter.close(); var3_filter = null;
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq87_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq87_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq87_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq87_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq88_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq88_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname;
	
		public seq88_map(com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname)
		{
			this.var1_cur_filter_attributes_qname = var1_cur_filter_attributes_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq88_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq88_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_filter_attributes_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current()))), "Connection");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq89_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq89_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq89_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq89_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq90_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq90_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq90_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq90_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq90_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(1L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq91_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq91_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq91_map closure;
			IEnumerator var2_filter_elements_qname;
			java.lang.String var3_cast;
			public Enumerator(seq91_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Cell", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq92_seq_(var3_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq92_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq92_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq92_seq_ closure;
			public Enumerator(seq92_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_cast;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Data", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq93_seq_(closure.var1_cast)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq93_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq93_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq93_seq_ closure;
			public Enumerator(seq93_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Type", "urn:schemas-microsoft-com:office:spreadsheet"), com.altova.functions.Core.box("String"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_cast;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq94_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_namespace;
		com.altova.mapforce.IMFNode var2_create_namespace;
		com.altova.mapforce.IMFNode var3_create_namespace;
		com.altova.mapforce.IMFNode var4_create_namespace;
		com.altova.mapforce.IMFNode var5_create_namespace;
		com.altova.mapforce.IMFNode var6_create_namespace;
		com.altova.mapforce.IMFNode var7_create_namespace;
		com.altova.mapforce.IMFNode var8_create_namespace;
		com.altova.mapforce.IMFNode var9_create_namespace;
		com.altova.mapforce.IMFNode var10_create_namespace;
		com.altova.mapforce.IMFNode var11_create_namespace;
		com.altova.mapforce.IMFNode var12_create_namespace;
		com.altova.mapforce.IMFNode var13_create_namespace;
		javax.xml.namespace.QName var14_create_qname;
		javax.xml.namespace.QName var15_create_qname;
		com.altova.mapforce.IEnumerable var16_filter_elements_qname;
	
		public seq94_seq_(com.altova.mapforce.IMFNode var1_create_namespace, com.altova.mapforce.IMFNode var2_create_namespace, com.altova.mapforce.IMFNode var3_create_namespace, com.altova.mapforce.IMFNode var4_create_namespace, com.altova.mapforce.IMFNode var5_create_namespace, com.altova.mapforce.IMFNode var6_create_namespace, com.altova.mapforce.IMFNode var7_create_namespace, com.altova.mapforce.IMFNode var8_create_namespace, com.altova.mapforce.IMFNode var9_create_namespace, com.altova.mapforce.IMFNode var10_create_namespace, com.altova.mapforce.IMFNode var11_create_namespace, com.altova.mapforce.IMFNode var12_create_namespace, com.altova.mapforce.IMFNode var13_create_namespace, javax.xml.namespace.QName var14_create_qname, javax.xml.namespace.QName var15_create_qname, com.altova.mapforce.IEnumerable var16_filter_elements_qname)
		{
			this.var1_create_namespace = var1_create_namespace;
			this.var2_create_namespace = var2_create_namespace;
			this.var3_create_namespace = var3_create_namespace;
			this.var4_create_namespace = var4_create_namespace;
			this.var5_create_namespace = var5_create_namespace;
			this.var6_create_namespace = var6_create_namespace;
			this.var7_create_namespace = var7_create_namespace;
			this.var8_create_namespace = var8_create_namespace;
			this.var9_create_namespace = var9_create_namespace;
			this.var10_create_namespace = var10_create_namespace;
			this.var11_create_namespace = var11_create_namespace;
			this.var12_create_namespace = var12_create_namespace;
			this.var13_create_namespace = var13_create_namespace;
			this.var14_create_qname = var14_create_qname;
			this.var15_create_qname = var15_create_qname;
			this.var16_filter_elements_qname = var16_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq94_seq_ closure;
			public Enumerator(seq94_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var3_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var5_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = closure.var6_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = closure.var7_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = closure.var8_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = closure.var9_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = closure.var10_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = closure.var11_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = closure.var12_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				current = closure.var13_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = com.altova.functions.Core.createAttribute(closure.var14_create_qname, com.altova.functions.Core.box("Spare"));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(closure.var15_create_qname, (new seq95_join(closure.var16_filter_elements_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq95_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements_qname;
	
		public seq95_join(com.altova.mapforce.IEnumerable var1_filter_elements_qname)
		{
			this.var1_filter_elements_qname = var1_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq95_join closure;
			IEnumerator var2_filter_elements_qname;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq95_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (closure.var1_filter_elements_qname).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq96_filter(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				var4_filter = ((new seq98_filter(((com.altova.mapforce.IMFNode)(var3_filter.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				var3_filter.close(); var3_filter = null;
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Row", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq100_map(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				var4_filter.close(); var4_filter = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var4_filter.close(); var4_filter = null;
				var3_filter.close(); var3_filter = null;
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq96_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq96_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq96_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq96_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq97_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq97_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname;
	
		public seq97_map(com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname)
		{
			this.var1_cur_filter_attributes_qname = var1_cur_filter_attributes_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq97_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq97_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_filter_attributes_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current()))), "Spare");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq98_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq98_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq98_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq98_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq99_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq99_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq99_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq99_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq99_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(1L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq100_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq100_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq100_map closure;
			IEnumerator var2_filter_elements_qname;
			java.lang.String var3_cast;
			public Enumerator(seq100_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Cell", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq101_seq_(var3_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq101_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq101_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq101_seq_ closure;
			public Enumerator(seq101_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_cast;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Data", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq102_seq_(closure.var1_cast)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq102_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq102_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq102_seq_ closure;
			public Enumerator(seq102_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Type", "urn:schemas-microsoft-com:office:spreadsheet"), com.altova.functions.Core.box("String"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_cast;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq103_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_namespace;
		com.altova.mapforce.IMFNode var2_create_namespace;
		com.altova.mapforce.IMFNode var3_create_namespace;
		com.altova.mapforce.IMFNode var4_create_namespace;
		com.altova.mapforce.IMFNode var5_create_namespace;
		com.altova.mapforce.IMFNode var6_create_namespace;
		com.altova.mapforce.IMFNode var7_create_namespace;
		com.altova.mapforce.IMFNode var8_create_namespace;
		com.altova.mapforce.IMFNode var9_create_namespace;
		com.altova.mapforce.IMFNode var10_create_namespace;
		com.altova.mapforce.IMFNode var11_create_namespace;
		com.altova.mapforce.IMFNode var12_create_namespace;
		com.altova.mapforce.IMFNode var13_create_namespace;
		javax.xml.namespace.QName var14_create_qname;
		javax.xml.namespace.QName var15_create_qname;
		com.altova.mapforce.IEnumerable var16_filter_elements_qname;
	
		public seq103_seq_(com.altova.mapforce.IMFNode var1_create_namespace, com.altova.mapforce.IMFNode var2_create_namespace, com.altova.mapforce.IMFNode var3_create_namespace, com.altova.mapforce.IMFNode var4_create_namespace, com.altova.mapforce.IMFNode var5_create_namespace, com.altova.mapforce.IMFNode var6_create_namespace, com.altova.mapforce.IMFNode var7_create_namespace, com.altova.mapforce.IMFNode var8_create_namespace, com.altova.mapforce.IMFNode var9_create_namespace, com.altova.mapforce.IMFNode var10_create_namespace, com.altova.mapforce.IMFNode var11_create_namespace, com.altova.mapforce.IMFNode var12_create_namespace, com.altova.mapforce.IMFNode var13_create_namespace, javax.xml.namespace.QName var14_create_qname, javax.xml.namespace.QName var15_create_qname, com.altova.mapforce.IEnumerable var16_filter_elements_qname)
		{
			this.var1_create_namespace = var1_create_namespace;
			this.var2_create_namespace = var2_create_namespace;
			this.var3_create_namespace = var3_create_namespace;
			this.var4_create_namespace = var4_create_namespace;
			this.var5_create_namespace = var5_create_namespace;
			this.var6_create_namespace = var6_create_namespace;
			this.var7_create_namespace = var7_create_namespace;
			this.var8_create_namespace = var8_create_namespace;
			this.var9_create_namespace = var9_create_namespace;
			this.var10_create_namespace = var10_create_namespace;
			this.var11_create_namespace = var11_create_namespace;
			this.var12_create_namespace = var12_create_namespace;
			this.var13_create_namespace = var13_create_namespace;
			this.var14_create_qname = var14_create_qname;
			this.var15_create_qname = var15_create_qname;
			this.var16_filter_elements_qname = var16_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq103_seq_ closure;
			public Enumerator(seq103_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var3_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var5_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = closure.var6_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = closure.var7_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = closure.var8_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = closure.var9_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = closure.var10_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = closure.var11_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = closure.var12_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				current = closure.var13_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = com.altova.functions.Core.createAttribute(closure.var14_create_qname, com.altova.functions.Core.box("Resource"));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(closure.var15_create_qname, (new seq104_join(closure.var16_filter_elements_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq104_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements_qname;
	
		public seq104_join(com.altova.mapforce.IEnumerable var1_filter_elements_qname)
		{
			this.var1_filter_elements_qname = var1_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq104_join closure;
			IEnumerator var2_filter_elements_qname;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq104_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (closure.var1_filter_elements_qname).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq105_filter(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				var4_filter = ((new seq107_filter(((com.altova.mapforce.IMFNode)(var3_filter.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				var3_filter.close(); var3_filter = null;
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Row", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq109_map(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				var4_filter.close(); var4_filter = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var4_filter.close(); var4_filter = null;
				var3_filter.close(); var3_filter = null;
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq105_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq105_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq105_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq105_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq106_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq106_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname;
	
		public seq106_map(com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname)
		{
			this.var1_cur_filter_attributes_qname = var1_cur_filter_attributes_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq106_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq106_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_filter_attributes_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current()))), "Resource");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq107_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq107_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq107_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq107_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq108_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq108_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq108_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq108_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq108_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(1L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq109_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq109_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq109_map closure;
			IEnumerator var2_filter_elements_qname;
			java.lang.String var3_cast;
			public Enumerator(seq109_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Cell", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq110_seq_(var3_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq110_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq110_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq110_seq_ closure;
			public Enumerator(seq110_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_cast;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Data", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq111_seq_(closure.var1_cast)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq111_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq111_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq111_seq_ closure;
			public Enumerator(seq111_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Type", "urn:schemas-microsoft-com:office:spreadsheet"), com.altova.functions.Core.box("String"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_cast;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq112_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_namespace;
		com.altova.mapforce.IMFNode var2_create_namespace;
		com.altova.mapforce.IMFNode var3_create_namespace;
		com.altova.mapforce.IMFNode var4_create_namespace;
		com.altova.mapforce.IMFNode var5_create_namespace;
		com.altova.mapforce.IMFNode var6_create_namespace;
		com.altova.mapforce.IMFNode var7_create_namespace;
		com.altova.mapforce.IMFNode var8_create_namespace;
		com.altova.mapforce.IMFNode var9_create_namespace;
		com.altova.mapforce.IMFNode var10_create_namespace;
		com.altova.mapforce.IMFNode var11_create_namespace;
		com.altova.mapforce.IMFNode var12_create_namespace;
		com.altova.mapforce.IMFNode var13_create_namespace;
		javax.xml.namespace.QName var14_create_qname;
		javax.xml.namespace.QName var15_create_qname;
		com.altova.mapforce.IEnumerable var16_filter_elements_qname;
	
		public seq112_seq_(com.altova.mapforce.IMFNode var1_create_namespace, com.altova.mapforce.IMFNode var2_create_namespace, com.altova.mapforce.IMFNode var3_create_namespace, com.altova.mapforce.IMFNode var4_create_namespace, com.altova.mapforce.IMFNode var5_create_namespace, com.altova.mapforce.IMFNode var6_create_namespace, com.altova.mapforce.IMFNode var7_create_namespace, com.altova.mapforce.IMFNode var8_create_namespace, com.altova.mapforce.IMFNode var9_create_namespace, com.altova.mapforce.IMFNode var10_create_namespace, com.altova.mapforce.IMFNode var11_create_namespace, com.altova.mapforce.IMFNode var12_create_namespace, com.altova.mapforce.IMFNode var13_create_namespace, javax.xml.namespace.QName var14_create_qname, javax.xml.namespace.QName var15_create_qname, com.altova.mapforce.IEnumerable var16_filter_elements_qname)
		{
			this.var1_create_namespace = var1_create_namespace;
			this.var2_create_namespace = var2_create_namespace;
			this.var3_create_namespace = var3_create_namespace;
			this.var4_create_namespace = var4_create_namespace;
			this.var5_create_namespace = var5_create_namespace;
			this.var6_create_namespace = var6_create_namespace;
			this.var7_create_namespace = var7_create_namespace;
			this.var8_create_namespace = var8_create_namespace;
			this.var9_create_namespace = var9_create_namespace;
			this.var10_create_namespace = var10_create_namespace;
			this.var11_create_namespace = var11_create_namespace;
			this.var12_create_namespace = var12_create_namespace;
			this.var13_create_namespace = var13_create_namespace;
			this.var14_create_qname = var14_create_qname;
			this.var15_create_qname = var15_create_qname;
			this.var16_filter_elements_qname = var16_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq112_seq_ closure;
			public Enumerator(seq112_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var3_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var5_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = closure.var6_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = closure.var7_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = closure.var8_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = closure.var9_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = closure.var10_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = closure.var11_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = closure.var12_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				current = closure.var13_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = com.altova.functions.Core.createAttribute(closure.var14_create_qname, com.altova.functions.Core.box("Job"));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(closure.var15_create_qname, (new seq113_join(closure.var16_filter_elements_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq113_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements_qname;
	
		public seq113_join(com.altova.mapforce.IEnumerable var1_filter_elements_qname)
		{
			this.var1_filter_elements_qname = var1_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq113_join closure;
			IEnumerator var2_filter_elements_qname;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq113_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (closure.var1_filter_elements_qname).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq114_filter(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				var4_filter = ((new seq116_filter(((com.altova.mapforce.IMFNode)(var3_filter.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				var3_filter.close(); var3_filter = null;
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Row", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq118_map(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				var4_filter.close(); var4_filter = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var4_filter.close(); var4_filter = null;
				var3_filter.close(); var3_filter = null;
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq114_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq114_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq114_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq114_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq115_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq115_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname;
	
		public seq115_map(com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname)
		{
			this.var1_cur_filter_attributes_qname = var1_cur_filter_attributes_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq115_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq115_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_filter_attributes_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current()))), "Job");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq116_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq116_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq116_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq116_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq117_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq117_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq117_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq117_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq117_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(1L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq118_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq118_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq118_map closure;
			IEnumerator var2_filter_elements_qname;
			java.lang.String var3_cast;
			public Enumerator(seq118_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Cell", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq119_seq_(var3_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq119_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq119_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq119_seq_ closure;
			public Enumerator(seq119_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_cast;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Data", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq120_seq_(closure.var1_cast)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq120_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq120_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq120_seq_ closure;
			public Enumerator(seq120_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Type", "urn:schemas-microsoft-com:office:spreadsheet"), com.altova.functions.Core.box("String"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_cast;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq121_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_namespace;
		com.altova.mapforce.IMFNode var2_create_namespace;
		com.altova.mapforce.IMFNode var3_create_namespace;
		com.altova.mapforce.IMFNode var4_create_namespace;
		com.altova.mapforce.IMFNode var5_create_namespace;
		com.altova.mapforce.IMFNode var6_create_namespace;
		com.altova.mapforce.IMFNode var7_create_namespace;
		com.altova.mapforce.IMFNode var8_create_namespace;
		com.altova.mapforce.IMFNode var9_create_namespace;
		com.altova.mapforce.IMFNode var10_create_namespace;
		com.altova.mapforce.IMFNode var11_create_namespace;
		com.altova.mapforce.IMFNode var12_create_namespace;
		com.altova.mapforce.IMFNode var13_create_namespace;
		javax.xml.namespace.QName var14_create_qname;
		javax.xml.namespace.QName var15_create_qname;
		com.altova.mapforce.IEnumerable var16_filter_elements_qname;
	
		public seq121_seq_(com.altova.mapforce.IMFNode var1_create_namespace, com.altova.mapforce.IMFNode var2_create_namespace, com.altova.mapforce.IMFNode var3_create_namespace, com.altova.mapforce.IMFNode var4_create_namespace, com.altova.mapforce.IMFNode var5_create_namespace, com.altova.mapforce.IMFNode var6_create_namespace, com.altova.mapforce.IMFNode var7_create_namespace, com.altova.mapforce.IMFNode var8_create_namespace, com.altova.mapforce.IMFNode var9_create_namespace, com.altova.mapforce.IMFNode var10_create_namespace, com.altova.mapforce.IMFNode var11_create_namespace, com.altova.mapforce.IMFNode var12_create_namespace, com.altova.mapforce.IMFNode var13_create_namespace, javax.xml.namespace.QName var14_create_qname, javax.xml.namespace.QName var15_create_qname, com.altova.mapforce.IEnumerable var16_filter_elements_qname)
		{
			this.var1_create_namespace = var1_create_namespace;
			this.var2_create_namespace = var2_create_namespace;
			this.var3_create_namespace = var3_create_namespace;
			this.var4_create_namespace = var4_create_namespace;
			this.var5_create_namespace = var5_create_namespace;
			this.var6_create_namespace = var6_create_namespace;
			this.var7_create_namespace = var7_create_namespace;
			this.var8_create_namespace = var8_create_namespace;
			this.var9_create_namespace = var9_create_namespace;
			this.var10_create_namespace = var10_create_namespace;
			this.var11_create_namespace = var11_create_namespace;
			this.var12_create_namespace = var12_create_namespace;
			this.var13_create_namespace = var13_create_namespace;
			this.var14_create_qname = var14_create_qname;
			this.var15_create_qname = var15_create_qname;
			this.var16_filter_elements_qname = var16_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq121_seq_ closure;
			public Enumerator(seq121_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var3_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var5_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = closure.var6_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = closure.var7_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = closure.var8_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = closure.var9_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = closure.var10_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = closure.var11_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = closure.var12_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				current = closure.var13_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = com.altova.functions.Core.createAttribute(closure.var14_create_qname, com.altova.functions.Core.box("Impact"));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(closure.var15_create_qname, (new seq122_join(closure.var16_filter_elements_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq122_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements_qname;
	
		public seq122_join(com.altova.mapforce.IEnumerable var1_filter_elements_qname)
		{
			this.var1_filter_elements_qname = var1_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq122_join closure;
			IEnumerator var2_filter_elements_qname;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq122_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (closure.var1_filter_elements_qname).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq123_filter(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				var4_filter = ((new seq125_filter(((com.altova.mapforce.IMFNode)(var3_filter.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				var3_filter.close(); var3_filter = null;
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Row", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq127_map(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				var4_filter.close(); var4_filter = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var4_filter.close(); var4_filter = null;
				var3_filter.close(); var3_filter = null;
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq123_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq123_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq123_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq123_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq124_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq124_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname;
	
		public seq124_map(com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname)
		{
			this.var1_cur_filter_attributes_qname = var1_cur_filter_attributes_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq124_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq124_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_filter_attributes_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current()))), "Impact");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq125_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq125_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq125_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq125_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq126_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq126_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq126_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq126_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq126_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(1L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq127_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq127_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq127_map closure;
			IEnumerator var2_filter_elements_qname;
			java.lang.String var3_cast;
			public Enumerator(seq127_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Cell", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq128_seq_(var3_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq128_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq128_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq128_seq_ closure;
			public Enumerator(seq128_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_cast;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Data", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq129_seq_(closure.var1_cast)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq129_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq129_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq129_seq_ closure;
			public Enumerator(seq129_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Type", "urn:schemas-microsoft-com:office:spreadsheet"), com.altova.functions.Core.box("String"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_cast;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq130_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_namespace;
		com.altova.mapforce.IMFNode var2_create_namespace;
		com.altova.mapforce.IMFNode var3_create_namespace;
		com.altova.mapforce.IMFNode var4_create_namespace;
		com.altova.mapforce.IMFNode var5_create_namespace;
		com.altova.mapforce.IMFNode var6_create_namespace;
		com.altova.mapforce.IMFNode var7_create_namespace;
		com.altova.mapforce.IMFNode var8_create_namespace;
		com.altova.mapforce.IMFNode var9_create_namespace;
		com.altova.mapforce.IMFNode var10_create_namespace;
		com.altova.mapforce.IMFNode var11_create_namespace;
		com.altova.mapforce.IMFNode var12_create_namespace;
		com.altova.mapforce.IMFNode var13_create_namespace;
		javax.xml.namespace.QName var14_create_qname;
		javax.xml.namespace.QName var15_create_qname;
		com.altova.mapforce.IEnumerable var16_filter_elements_qname;
	
		public seq130_seq_(com.altova.mapforce.IMFNode var1_create_namespace, com.altova.mapforce.IMFNode var2_create_namespace, com.altova.mapforce.IMFNode var3_create_namespace, com.altova.mapforce.IMFNode var4_create_namespace, com.altova.mapforce.IMFNode var5_create_namespace, com.altova.mapforce.IMFNode var6_create_namespace, com.altova.mapforce.IMFNode var7_create_namespace, com.altova.mapforce.IMFNode var8_create_namespace, com.altova.mapforce.IMFNode var9_create_namespace, com.altova.mapforce.IMFNode var10_create_namespace, com.altova.mapforce.IMFNode var11_create_namespace, com.altova.mapforce.IMFNode var12_create_namespace, com.altova.mapforce.IMFNode var13_create_namespace, javax.xml.namespace.QName var14_create_qname, javax.xml.namespace.QName var15_create_qname, com.altova.mapforce.IEnumerable var16_filter_elements_qname)
		{
			this.var1_create_namespace = var1_create_namespace;
			this.var2_create_namespace = var2_create_namespace;
			this.var3_create_namespace = var3_create_namespace;
			this.var4_create_namespace = var4_create_namespace;
			this.var5_create_namespace = var5_create_namespace;
			this.var6_create_namespace = var6_create_namespace;
			this.var7_create_namespace = var7_create_namespace;
			this.var8_create_namespace = var8_create_namespace;
			this.var9_create_namespace = var9_create_namespace;
			this.var10_create_namespace = var10_create_namespace;
			this.var11_create_namespace = var11_create_namespace;
			this.var12_create_namespace = var12_create_namespace;
			this.var13_create_namespace = var13_create_namespace;
			this.var14_create_qname = var14_create_qname;
			this.var15_create_qname = var15_create_qname;
			this.var16_filter_elements_qname = var16_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq130_seq_ closure;
			public Enumerator(seq130_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var3_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var5_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = closure.var6_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = closure.var7_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = closure.var8_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = closure.var9_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = closure.var10_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = closure.var11_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = closure.var12_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				current = closure.var13_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = com.altova.functions.Core.createAttribute(closure.var14_create_qname, com.altova.functions.Core.box("Document"));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(closure.var15_create_qname, (new seq131_join(closure.var16_filter_elements_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq131_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements_qname;
	
		public seq131_join(com.altova.mapforce.IEnumerable var1_filter_elements_qname)
		{
			this.var1_filter_elements_qname = var1_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq131_join closure;
			IEnumerator var2_filter_elements_qname;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq131_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (closure.var1_filter_elements_qname).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq132_filter(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				var4_filter = ((new seq134_filter(((com.altova.mapforce.IMFNode)(var3_filter.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				var3_filter.close(); var3_filter = null;
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Row", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq136_map(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				var4_filter.close(); var4_filter = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var4_filter.close(); var4_filter = null;
				var3_filter.close(); var3_filter = null;
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq132_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq132_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq132_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq132_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq133_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq133_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname;
	
		public seq133_map(com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname)
		{
			this.var1_cur_filter_attributes_qname = var1_cur_filter_attributes_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq133_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq133_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_filter_attributes_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current()))), "Document");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq134_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq134_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq134_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq134_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq135_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq135_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq135_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq135_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq135_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(1L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq136_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq136_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq136_map closure;
			IEnumerator var2_filter_elements_qname;
			java.lang.String var3_cast;
			public Enumerator(seq136_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Cell", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq137_seq_(var3_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq137_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq137_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq137_seq_ closure;
			public Enumerator(seq137_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_cast;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Data", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq138_seq_(closure.var1_cast)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq138_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq138_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq138_seq_ closure;
			public Enumerator(seq138_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Type", "urn:schemas-microsoft-com:office:spreadsheet"), com.altova.functions.Core.box("String"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_cast;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq139_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_namespace;
		com.altova.mapforce.IMFNode var2_create_namespace;
		com.altova.mapforce.IMFNode var3_create_namespace;
		com.altova.mapforce.IMFNode var4_create_namespace;
		com.altova.mapforce.IMFNode var5_create_namespace;
		com.altova.mapforce.IMFNode var6_create_namespace;
		com.altova.mapforce.IMFNode var7_create_namespace;
		com.altova.mapforce.IMFNode var8_create_namespace;
		com.altova.mapforce.IMFNode var9_create_namespace;
		com.altova.mapforce.IMFNode var10_create_namespace;
		com.altova.mapforce.IMFNode var11_create_namespace;
		com.altova.mapforce.IMFNode var12_create_namespace;
		com.altova.mapforce.IMFNode var13_create_namespace;
		javax.xml.namespace.QName var14_create_qname;
		javax.xml.namespace.QName var15_create_qname;
		com.altova.mapforce.IEnumerable var16_filter_elements_qname;
	
		public seq139_seq_(com.altova.mapforce.IMFNode var1_create_namespace, com.altova.mapforce.IMFNode var2_create_namespace, com.altova.mapforce.IMFNode var3_create_namespace, com.altova.mapforce.IMFNode var4_create_namespace, com.altova.mapforce.IMFNode var5_create_namespace, com.altova.mapforce.IMFNode var6_create_namespace, com.altova.mapforce.IMFNode var7_create_namespace, com.altova.mapforce.IMFNode var8_create_namespace, com.altova.mapforce.IMFNode var9_create_namespace, com.altova.mapforce.IMFNode var10_create_namespace, com.altova.mapforce.IMFNode var11_create_namespace, com.altova.mapforce.IMFNode var12_create_namespace, com.altova.mapforce.IMFNode var13_create_namespace, javax.xml.namespace.QName var14_create_qname, javax.xml.namespace.QName var15_create_qname, com.altova.mapforce.IEnumerable var16_filter_elements_qname)
		{
			this.var1_create_namespace = var1_create_namespace;
			this.var2_create_namespace = var2_create_namespace;
			this.var3_create_namespace = var3_create_namespace;
			this.var4_create_namespace = var4_create_namespace;
			this.var5_create_namespace = var5_create_namespace;
			this.var6_create_namespace = var6_create_namespace;
			this.var7_create_namespace = var7_create_namespace;
			this.var8_create_namespace = var8_create_namespace;
			this.var9_create_namespace = var9_create_namespace;
			this.var10_create_namespace = var10_create_namespace;
			this.var11_create_namespace = var11_create_namespace;
			this.var12_create_namespace = var12_create_namespace;
			this.var13_create_namespace = var13_create_namespace;
			this.var14_create_qname = var14_create_qname;
			this.var15_create_qname = var15_create_qname;
			this.var16_filter_elements_qname = var16_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq139_seq_ closure;
			public Enumerator(seq139_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var3_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var5_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = closure.var6_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = closure.var7_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = closure.var8_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = closure.var9_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = closure.var10_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = closure.var11_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = closure.var12_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				current = closure.var13_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = com.altova.functions.Core.createAttribute(closure.var14_create_qname, com.altova.functions.Core.box("Attribute"));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(closure.var15_create_qname, (new seq140_join(closure.var16_filter_elements_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq140_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements_qname;
	
		public seq140_join(com.altova.mapforce.IEnumerable var1_filter_elements_qname)
		{
			this.var1_filter_elements_qname = var1_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq140_join closure;
			IEnumerator var2_filter_elements_qname;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq140_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (closure.var1_filter_elements_qname).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq141_filter(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				var4_filter = ((new seq143_filter(((com.altova.mapforce.IMFNode)(var3_filter.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				var3_filter.close(); var3_filter = null;
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Row", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq145_map(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				var4_filter.close(); var4_filter = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var4_filter.close(); var4_filter = null;
				var3_filter.close(); var3_filter = null;
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq141_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq141_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq141_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq141_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq142_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq142_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname;
	
		public seq142_map(com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname)
		{
			this.var1_cur_filter_attributes_qname = var1_cur_filter_attributes_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq142_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq142_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_filter_attributes_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current()))), "Attribute");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq143_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq143_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq143_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq143_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq144_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq144_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq144_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq144_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq144_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(1L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq145_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq145_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq145_map closure;
			IEnumerator var2_filter_elements_qname;
			java.lang.String var3_cast;
			public Enumerator(seq145_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Cell", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq146_seq_(var3_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq146_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq146_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq146_seq_ closure;
			public Enumerator(seq146_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_cast;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Data", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq147_seq_(closure.var1_cast)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq147_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq147_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq147_seq_ closure;
			public Enumerator(seq147_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Type", "urn:schemas-microsoft-com:office:spreadsheet"), com.altova.functions.Core.box("String"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_cast;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq148_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_namespace;
		com.altova.mapforce.IMFNode var2_create_namespace;
		com.altova.mapforce.IMFNode var3_create_namespace;
		com.altova.mapforce.IMFNode var4_create_namespace;
		com.altova.mapforce.IMFNode var5_create_namespace;
		com.altova.mapforce.IMFNode var6_create_namespace;
		com.altova.mapforce.IMFNode var7_create_namespace;
		com.altova.mapforce.IMFNode var8_create_namespace;
		com.altova.mapforce.IMFNode var9_create_namespace;
		com.altova.mapforce.IMFNode var10_create_namespace;
		com.altova.mapforce.IMFNode var11_create_namespace;
		com.altova.mapforce.IMFNode var12_create_namespace;
		com.altova.mapforce.IMFNode var13_create_namespace;
		javax.xml.namespace.QName var14_create_qname;
		javax.xml.namespace.QName var15_create_qname;
		com.altova.mapforce.IEnumerable var16_filter_elements_qname;
	
		public seq148_seq_(com.altova.mapforce.IMFNode var1_create_namespace, com.altova.mapforce.IMFNode var2_create_namespace, com.altova.mapforce.IMFNode var3_create_namespace, com.altova.mapforce.IMFNode var4_create_namespace, com.altova.mapforce.IMFNode var5_create_namespace, com.altova.mapforce.IMFNode var6_create_namespace, com.altova.mapforce.IMFNode var7_create_namespace, com.altova.mapforce.IMFNode var8_create_namespace, com.altova.mapforce.IMFNode var9_create_namespace, com.altova.mapforce.IMFNode var10_create_namespace, com.altova.mapforce.IMFNode var11_create_namespace, com.altova.mapforce.IMFNode var12_create_namespace, com.altova.mapforce.IMFNode var13_create_namespace, javax.xml.namespace.QName var14_create_qname, javax.xml.namespace.QName var15_create_qname, com.altova.mapforce.IEnumerable var16_filter_elements_qname)
		{
			this.var1_create_namespace = var1_create_namespace;
			this.var2_create_namespace = var2_create_namespace;
			this.var3_create_namespace = var3_create_namespace;
			this.var4_create_namespace = var4_create_namespace;
			this.var5_create_namespace = var5_create_namespace;
			this.var6_create_namespace = var6_create_namespace;
			this.var7_create_namespace = var7_create_namespace;
			this.var8_create_namespace = var8_create_namespace;
			this.var9_create_namespace = var9_create_namespace;
			this.var10_create_namespace = var10_create_namespace;
			this.var11_create_namespace = var11_create_namespace;
			this.var12_create_namespace = var12_create_namespace;
			this.var13_create_namespace = var13_create_namespace;
			this.var14_create_qname = var14_create_qname;
			this.var15_create_qname = var15_create_qname;
			this.var16_filter_elements_qname = var16_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq148_seq_ closure;
			public Enumerator(seq148_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var3_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var5_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = closure.var6_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = closure.var7_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = closure.var8_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = closure.var9_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = closure.var10_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = closure.var11_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = closure.var12_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				current = closure.var13_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = com.altova.functions.Core.createAttribute(closure.var14_create_qname, com.altova.functions.Core.box("Coordinate"));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(closure.var15_create_qname, (new seq149_join(closure.var16_filter_elements_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq149_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements_qname;
	
		public seq149_join(com.altova.mapforce.IEnumerable var1_filter_elements_qname)
		{
			this.var1_filter_elements_qname = var1_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq149_join closure;
			IEnumerator var2_filter_elements_qname;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq149_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (closure.var1_filter_elements_qname).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq150_filter(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				var4_filter = ((new seq152_filter(((com.altova.mapforce.IMFNode)(var3_filter.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				var3_filter.close(); var3_filter = null;
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Row", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq154_map(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				var4_filter.close(); var4_filter = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var4_filter.close(); var4_filter = null;
				var3_filter.close(); var3_filter = null;
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq150_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq150_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq150_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq150_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq151_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq151_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname;
	
		public seq151_map(com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname)
		{
			this.var1_cur_filter_attributes_qname = var1_cur_filter_attributes_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq151_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq151_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_filter_attributes_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current()))), "Coordinate");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq152_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq152_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq152_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq152_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq153_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq153_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq153_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq153_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq153_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(1L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq154_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq154_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq154_map closure;
			IEnumerator var2_filter_elements_qname;
			java.lang.String var3_cast;
			public Enumerator(seq154_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Cell", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq155_seq_(var3_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq155_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq155_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq155_seq_ closure;
			public Enumerator(seq155_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_cast;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Data", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq156_seq_(closure.var1_cast)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq156_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq156_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq156_seq_ closure;
			public Enumerator(seq156_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Type", "urn:schemas-microsoft-com:office:spreadsheet"), com.altova.functions.Core.box("String"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_cast;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq157_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_namespace;
		com.altova.mapforce.IMFNode var2_create_namespace;
		com.altova.mapforce.IMFNode var3_create_namespace;
		com.altova.mapforce.IMFNode var4_create_namespace;
		com.altova.mapforce.IMFNode var5_create_namespace;
		com.altova.mapforce.IMFNode var6_create_namespace;
		com.altova.mapforce.IMFNode var7_create_namespace;
		com.altova.mapforce.IMFNode var8_create_namespace;
		com.altova.mapforce.IMFNode var9_create_namespace;
		com.altova.mapforce.IMFNode var10_create_namespace;
		com.altova.mapforce.IMFNode var11_create_namespace;
		com.altova.mapforce.IMFNode var12_create_namespace;
		com.altova.mapforce.IMFNode var13_create_namespace;
		javax.xml.namespace.QName var14_create_qname;
		javax.xml.namespace.QName var15_create_qname;
		com.altova.mapforce.IEnumerable var16_filter_elements_qname;
	
		public seq157_seq_(com.altova.mapforce.IMFNode var1_create_namespace, com.altova.mapforce.IMFNode var2_create_namespace, com.altova.mapforce.IMFNode var3_create_namespace, com.altova.mapforce.IMFNode var4_create_namespace, com.altova.mapforce.IMFNode var5_create_namespace, com.altova.mapforce.IMFNode var6_create_namespace, com.altova.mapforce.IMFNode var7_create_namespace, com.altova.mapforce.IMFNode var8_create_namespace, com.altova.mapforce.IMFNode var9_create_namespace, com.altova.mapforce.IMFNode var10_create_namespace, com.altova.mapforce.IMFNode var11_create_namespace, com.altova.mapforce.IMFNode var12_create_namespace, com.altova.mapforce.IMFNode var13_create_namespace, javax.xml.namespace.QName var14_create_qname, javax.xml.namespace.QName var15_create_qname, com.altova.mapforce.IEnumerable var16_filter_elements_qname)
		{
			this.var1_create_namespace = var1_create_namespace;
			this.var2_create_namespace = var2_create_namespace;
			this.var3_create_namespace = var3_create_namespace;
			this.var4_create_namespace = var4_create_namespace;
			this.var5_create_namespace = var5_create_namespace;
			this.var6_create_namespace = var6_create_namespace;
			this.var7_create_namespace = var7_create_namespace;
			this.var8_create_namespace = var8_create_namespace;
			this.var9_create_namespace = var9_create_namespace;
			this.var10_create_namespace = var10_create_namespace;
			this.var11_create_namespace = var11_create_namespace;
			this.var12_create_namespace = var12_create_namespace;
			this.var13_create_namespace = var13_create_namespace;
			this.var14_create_qname = var14_create_qname;
			this.var15_create_qname = var15_create_qname;
			this.var16_filter_elements_qname = var16_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq157_seq_ closure;
			public Enumerator(seq157_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var3_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var5_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = closure.var6_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = closure.var7_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = closure.var8_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = closure.var9_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = closure.var10_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = closure.var11_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = closure.var12_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				current = closure.var13_create_namespace;
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = com.altova.functions.Core.createAttribute(closure.var14_create_qname, com.altova.functions.Core.box("Issue"));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(closure.var15_create_qname, (new seq158_join(closure.var16_filter_elements_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq158_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements_qname;
	
		public seq158_join(com.altova.mapforce.IEnumerable var1_filter_elements_qname)
		{
			this.var1_filter_elements_qname = var1_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq158_join closure;
			IEnumerator var2_filter_elements_qname;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq158_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (closure.var1_filter_elements_qname).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq159_filter(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				var4_filter = ((new seq161_filter(((com.altova.mapforce.IMFNode)(var3_filter.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				var3_filter.close(); var3_filter = null;
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Row", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq163_map(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				var4_filter.close(); var4_filter = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var4_filter.close(); var4_filter = null;
				var3_filter.close(); var3_filter = null;
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq159_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq159_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq159_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq159_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq160_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq160_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname;
	
		public seq160_map(com.altova.mapforce.IMFNode var1_cur_filter_attributes_qname)
		{
			this.var1_cur_filter_attributes_qname = var1_cur_filter_attributes_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq160_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq160_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_filter_attributes_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current()))), "Issue");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq161_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq161_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq161_filter closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq161_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq162_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current()))))))))) {state = 2; return false; }
				current = var2_filter_elements_qname.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq162_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq162_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq162_map closure;
			IEnumerator var2_filter_attributes_qname;
			public Enumerator(seq162_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_attributes_qname = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_attributes_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_attributes_qname.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(1L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_attributes_qname.close(); var2_filter_attributes_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq163_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_filter_elements_qname;
	
		public seq163_map(com.altova.mapforce.IMFNode var1_cur_filter_elements_qname)
		{
			this.var1_cur_filter_elements_qname = var1_cur_filter_elements_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq163_map closure;
			IEnumerator var2_filter_elements_qname;
			java.lang.String var3_cast;
			public Enumerator(seq163_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_cur_filter_elements_qname)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				var3_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Cell", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq164_seq_(var3_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq164_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq164_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq164_seq_ closure;
			public Enumerator(seq164_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_cast;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Data", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq165_seq_(closure.var1_cast)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq165_seq_ implements IEnumerable
	{
		java.lang.String var1_cast;
	
		public seq165_seq_(java.lang.String var1_cast)
		{
			this.var1_cast = var1_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq165_seq_ closure;
			public Enumerator(seq165_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Type", "urn:schemas-microsoft-com:office:spreadsheet"), com.altova.functions.Core.box("String"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_cast;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq166_create_element_qname implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		javax.xml.namespace.QName var2_create_qname;
		javax.xml.namespace.QName var3_create_qname;
	
		public seq166_create_element_qname(com.altova.mapforce.IMFNode var1_current, javax.xml.namespace.QName var2_create_qname, javax.xml.namespace.QName var3_create_qname)
		{
			this.var1_current = var1_current;
			this.var2_create_qname = var2_create_qname;
			this.var3_create_qname = var3_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq166_create_element_qname closure;
			public Enumerator(seq166_create_element_qname closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ss:Worksheet", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq167_join(closure.var2_create_qname, closure.var1_current, closure.var3_create_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq167_join implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_current;
		javax.xml.namespace.QName var3_create_qname;
	
		public seq167_join(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_current, javax.xml.namespace.QName var3_create_qname)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_current = var2_current;
			this.var3_create_qname = var3_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq167_join closure;
			IEnumerator var4_filter_elements_qname;
			public Enumerator(seq167_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 4;				
				if (!(com.altova.functions.Core.exists(com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_current)))) {state = 4; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ss:Name", "urn:schemas-microsoft-com:office:spreadsheet"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_current)))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				var4_filter_elements_qname = (com.altova.functions.Core.filterElements(closure.var3_create_qname, closure.var2_current)).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter_elements_qname.moveNext()) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ss:Table", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq168_map(((com.altova.mapforce.IMFNode)(var4_filter_elements_qname.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				var4_filter_elements_qname.close(); var4_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var4_filter_elements_qname.close(); var4_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq168_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq168_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq168_map closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq168_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", "urn:schemas-microsoft-com:office:spreadsheet"), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ss:Row", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq169_map(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq169_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq169_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq169_map closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq169_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", "urn:schemas-microsoft-com:office:spreadsheet"), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_qname.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ss:Cell", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq170_join(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq170_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq170_join(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq170_join closure;
			IEnumerator var2_filter_elements_qname;
			public Enumerator(seq170_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Lang.left(com.altova.CoreTypes.nodeToString(closure.var1_current), com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(new java.math.BigDecimal("0")))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var2_filter_elements_qname = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Data", "urn:schemas-microsoft-com:office:spreadsheet"), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var2_filter_elements_qname.moveNext()) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ss:Data", "urn:schemas-microsoft-com:office:spreadsheet"), (new seq171_join(((com.altova.mapforce.IMFNode)(var2_filter_elements_qname.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_filter_elements_qname.close(); var2_filter_elements_qname = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq171_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq171_join(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq171_join closure;
			IEnumerator var2_select_attributes;
			IEnumerator var3_select_children;
			public Enumerator(seq171_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_select_attributes = (com.altova.functions.Core.selectAttributes(closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_select_attributes.moveNext()) {state = 3; return false; }
				current = var2_select_attributes.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				var2_select_attributes.close(); var2_select_attributes = null;
				var3_select_children = (com.altova.functions.Core.selectChildren(closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var3_select_children.moveNext()) {state = 6; return false; }
				current = var3_select_children.current();
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				var3_select_children.close(); var3_select_children = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_select_attributes.close(); var2_select_attributes = null;
				var3_select_children.close(); var3_select_children = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class Outer implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_instance_XLSX;
	
		public Outer(com.altova.mapforce.IMFNode var1_instance_XLSX)
		{
			this.var1_instance_XLSX = var1_instance_XLSX;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			Outer closure;
			IEnumerator var2_box;
			public Enumerator(Outer closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_box = ((new main(closure.var1_instance_XLSX))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_box.moveNext()) {state = 3; return false; }
				current = var2_box.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_box.close(); var2_box = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_box.close(); var2_box = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}



	// instances
	protected org.w3c.dom.Node varXLSX2Instance;

	public void run(String XLSX2SourceFilename, String SpreadsheetMLTargetFilename) throws Exception {
		// open source streams
		writeTrace("Loading " + XLSX2SourceFilename + "...\n");
		com.altova.io.FileInput XLSX2Source = new com.altova.io.FileInput(XLSX2SourceFilename);
		// open target stream
		com.altova.io.FileOutput SpreadsheetMLTarget = new com.altova.io.FileOutput(SpreadsheetMLTargetFilename);

		// run
		run(XLSX2Source, SpreadsheetMLTarget);

		// close source streams
		XLSX2Source.close();
		// close target stream
		writeTrace("Saving " + SpreadsheetMLTargetFilename + "...\n");
		SpreadsheetMLTarget.close();
	}


	// main entry point

	public void run(com.altova.io.Input XLSX2Source, com.altova.io.Output SpreadsheetMLTarget) throws Exception {
		// Open the source(s)
		com.altova.xml.XLSXFileReader xlsxReader_XLSX2 = new com.altova.xml.XLSXFileReader(XLSX2Source);
		org.w3c.dom.Document doc_XLSX2 = xlsxReader_XLSX2.run();
		varXLSX2Instance = doc_XLSX2;
		if (runDoesCloseAll)
			XLSX2Source.close();

		// Create the target
		org.w3c.dom.Document SpreadsheetMLDoc = (SpreadsheetMLTarget.getType() == com.altova.io.Output.IO_DOM) ? SpreadsheetMLTarget.getDocument() : XmlTreeOperations.createDocument();

		// Execute mapping

		main mapping = new main(new com.altova.xml.DOMDocumentAsMFNodeAdapter(varXLSX2Instance, XLSX2Source.getFilename()));

		com.altova.xml.MFDOMWriter.write(mapping, SpreadsheetMLDoc);
		// Close the target
		XmlTreeOperations.saveDocument(SpreadsheetMLDoc, SpreadsheetMLTarget, "UTF-8", false, false, true);

		
		if (runDoesCloseAll)
		{
			XLSX2Source.close();
			SpreadsheetMLTarget.close();
		}
	}



}
